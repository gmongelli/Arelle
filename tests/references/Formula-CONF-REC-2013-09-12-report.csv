Index,Testcase,ID,Name,ReadMeFirst,Status,Expected,Actual
index.xml
,80155 xff.uncovered-aspect formula testcase.xml
,,V-01,"A formula tests that the uncovered concept aspect is the concept QName, obtaining
        its local name value.",concept-uncovered-instance1.xml,pass,,
,,V-02,A consistency assertion uses the uncovered concept aspect in its radius expression.,concept-uncovered-instance2.xml,pass,"{'assertion': (2, 0)}",
,,V-03,A existence assertion erroneously uses the uncovered concept aspect in its test expression.,concept-uncovered-instance3.xml,pass,xffe:invalidFunctionUse,xffe:invalidFunctionUse
,,V-04,A value assertion uses the uncovered concept aspect in its test expression.,concept-uncovered-instance4.xml,pass,"{'assertion': (2, 0)}","{'assertion': (2, 0)}"
,,V-05,"A value assertion uses the uncovered concept aspect in its test expression, 
        but implicit-filtering is 'false', so an error must be raised for invalid use.",invalid-use-without-implicit-filtering-instance.xml,pass,xffe:invalidFunctionUse,"xffe:invalidFunctionUse {'assertion': (0, 0)}"
,,V-11,"A formula tests that the uncovered entity-identifier aspect is the identifier element, obtaining
        its identifier and scheme attribute values.",entity-uncovered-instance1.xml,pass,,
,,V-21,A value assertion uses the uncovered location aspect in its test expression.,location-uncovered-instance1.xml,pass,"{'assertion': (1, 2)}","{'assertion': (1, 2)}"
,,V-31,"A value assertion has a fact variable, period uncovered, and tests that the
        day of the instant time of the period equals the fact's value.  Note that
        each instant period is specified as day in the context, so that the dateTime's day
        number is the next day, eg., Dec 31st has a day number of 1 (for midnight Jan 1).",period-uncovered-instance1.xml,pass,"{'assertion': (3, 0)}","{'assertion': (3, 0)}"
,,V-32,"A value assertion has a fact variable, period uncovered. Tests that when the
        matched fact is a tuple then the value returned for the period aspect is the 
        empty sequence.",period-uncovered-absent-instance.xml,pass,"{'assertion': (1, 1)}","{'assertion': (1, 1)}"
,,V-41,"A value assertion tests that the uncovered unit aspect is the unit element, obtaining
        its child measure element and assuring there's only one measure element of the proper
        data type (QName) and value.",unit-uncovered-instance1.xml,pass,"{'assertion': (2, 0)}","{'assertion': (2, 0)}"
,,V-42,"A value assertion has a string and numeric fact variable, unit covered, so unit aspect
        must be empty sequence.",string-numeric-unit-cover-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-71,"A value assertion tests that the uncovered non-XDT-segment aspect is s-equal
        to the segment of the factVariable that has all aspects uncovered.",uncovered-nonXDT-segment-instance1.xml,pass,"{'assertion': (10, 0)}","{'assertion': (10, 0)}"
,,V-91,"A formula tests the uncovered explicit and typed dimension values, including some
        facts that don't have the explicit dimension aspect.",uncovered-dimension-value-instance1.xml,pass,,
,11021_MissingConceptRule_testcase.xml
,,V-01,"The output concept aspect of the formula 
      is not defined with a concept aspect rule.  To prevent such a
      concept rule it is necessary to avoid use of the formula source
      parameter, so there are no default rules. To ensure that this
      error is determined statically there is no instance document, thus
      requiring the error to be identified during linkbase analysis.",11021-concepts.xsd,pass,xbrlfe:missingConceptRule,xbrlfe:missingConceptRule
,11023-MissingUnitRule_testcase.xml
,,V-01,"The formula produces a numeric item but 
      it doesn't have a unit aspect rule  
      for unit aspect.  The formula has no source to prevent
      default unit aspect rules.  In this variation the numeric
      concept is specified explicitly by formula concept rule qname, so
      that it can be determined during static analysis of linkbase.",11023-v01-concepts.xsd,pass,xbrlfe:missingUnitRule,xbrlfe:missingUnitRule
,,V-02,"Same as V-01 but the numeric concept is specified
      by concept aspect rule referring by source to a factVariable
      filtered to a statically qnamed numeric concept.",11023-v02-concepts.xsd,pass,xbrlfe:missingUnitRule,xbrlfe:missingUnitRule
,11025-ConflictingAspectRules_testcase.xml
,,V-01,"There are conflicting requirements in the processing formula
      between the period aspect rules of the output concept (duration) 
      and the concept aspect rule (periodType instant)",11025-v01-concepts.xsd,pass,xbrlfe:conflictingAspectRules,xbrlfe:conflictingAspectRules
,,V-02,"There are conflicting requirements in the processing formula
      between the unit aspect rules of the output concept  
      and the type of the aspect rule (stringItemType)",11025-v02-concepts.xsd,pass,xbrlfe:conflictingAspectRules,xbrlfe:conflictingAspectRules
,11027-MissingEntityIdentifierRule_testcase.xml
,,V-01,"The output entity identifier of the formula is a function of the input
      variable and there is not defined an explicit aspect rule.",11027-concepts.xsd,pass,xbrlfe:missingEntityIdentifierRule,xbrlfe:missingEntityIdentifierRule
,11028-MissingPeriodRule_testcase.xml
,,V-01,"The output period of the formula is a function of the input
      variable and there is not defined an explicit aspect rule.",11028-concepts.xsd,pass,xbrlfe:missingPeriodRule,xbrlfe:missingPeriodRule
,11029-incompleteConceptRule_testcase.xml
,,V-01,"The output concept aspect of the formula is a function of the input
      variable and there is not defined a nearest source and does not have
      a child element.",11029-concepts.xsd,pass,xbrlfe:incompleteConceptRule,xbrlfe:incompleteConceptRule
,11041-incompleteEntityIdentifierRule_testcase.xml
,,V-01,"The output entity identifier of the formula does not have a nearest source 
    and does not have a scheme attribute.",11041-v01-incompleteEntityIdentifierRule-input.xml,pass,xbrlfe:incompleteEntityIdentifierRule,xbrlfe:incompleteEntityIdentifierRule
,,V-02,"The output entity identifier of the formula does not have a nearest source 
    and does not have a value attribute.",11041-v02-incompleteEntityIdentifierRule-input.xml,pass,xbrlfe:incompleteEntityIdentifierRule,xbrlfe:incompleteEntityIdentifierRule
,,V-03,"The output entity identifier of the formula does not have a nearest source 
    and does not have either scheme or value attributes.",11041-v03-incompleteEntityIdentifierRule-input.xml,pass,xbrlfe:incompleteEntityIdentifierRule,xbrlfe:incompleteEntityIdentifierRule
,11051-incompletePeriodRule_testcase.xml
,,V-01,"The output period of the formula does not have a nearest source 
      and does not have a child element.",11051-v01-incompletePeriodRule-input.xml,pass,xbrlfe:incompletePeriodRule,xbrlfe:incompletePeriodRule
,11062-OCC-missingSAVForDimensionRule_testcase.xml
,,V-01,"The explicit dimension rule does not have any child elements
      and does not have a SAV for the dimension 
      that it identifies with its @dimension attribute",11062-v01-OCCdim-tests.xsd,pass,xbrlfe:missingSAVForExplicitDimensionRule,xbrlfe:missingSAVForExplicitDimensionRule
,,V-02,"The typed dimension rule does not have any child elements
      and does not have a SAV for the dimension 
      that it identifies with its @dimension attribute",11062-v02-OCCdim-tests.xsd,pass,xbrlfe:missingSAVForTypedDimensionRule,xbrlfe:missingSAVForTypedDimensionRule
,11063-missingSAVForUnitRule_testcase.xml
,,V-01,"The unit rule does not have 
      any child elements
      and does not have a SAV.",11063-v01-missingSAVForUnitRule-input.xml,pass,xbrlfe:missingSAVForUnitRule,xbrlfe:missingSAVForUnitRule
,11071 Bad Usage Of Dimension Rules.xml
,,V-01,Tests detection of bad usage of explicit dimension error.,11071-badUsageExplicitDim.xsd,pass,xbrlfe:badUsageOfExplicitDimensionRule,xbrlfe:badUsageOfExplicitDimensionRule
,,V-02,Tests detection of bad usage of typed dimension error.,11071-badUsageTypedDim.xsd,pass,xbrlfe:badUsageOfTypedDimensionRule,xbrlfe:badUsageOfTypedDimensionRule
,11201-unrecognisedAspectRule_testcase.xml
,,V-01,"The formula of this variation has to process the assets value 
      as defined, while the different aspects of the output concept
      there is an unrecognised aspect model for occ dimension aspect rule
      because the aspect model defined is non-dimensional.",11201-concepts.xsd,pass,xbrlfe:unrecognisedAspectRule,xbrlfe:unrecognisedAspectRule
,11202-illegalUseOfUncoveredQName_testcase.xml
,,V-01,"The source aspect value contains a QName whose value is 
       ""formula:uncovered"", which is referred to as the uncovered QName
       and there is not defined an implicit filter for this aspect rule 
       indicated by implicitFiltering false.",11202-concepts.xsd,pass,xbrlfe:illegalUseOfUncoveredQName,xbrlfe:illegalUseOfUncoveredQName
,11204-sequenceSAVConflicts_testcase.xml
,,V-01,"The source v:liabilities for the formula without implicit filtering
      produces a sequence of facts for liabilities, one for period 2007 and another for 2006.
      The period aspect of the result uses liabilities (the sequence)
      for its result.  In a draft of the formula spec this would have caused a sequence conflicts error,
      but not in the REC version (see
 http://wiki.xbrl.org/wiki/Formula_CR_2#2009-04-08_Hitoshi_Okumura:_The_definition_of_xbrlfe:sequenceSAVConflicts_should_be_modified_not_to_refer_implicit_filtering
      ).  Thus, though a static test, the variation now is expected to produce a result.",11204-v01-period-SAV-conflicts-input.xml,pass,,
,,V-02,"Implicit filtering is used in this testcase, but there's a period
      filter for liabilities to allow the liabilties sequence to pass for both
      context years.
      The source for the period aspect rule is v:liabilities 
      which produces SAV conflicts regardless of the use of implicitFiltering=true,
      because the period aspect filter is covered (here exemplifying
      multiple conflicting values).",11204-v02-aspectFilter-SAV-conflicts-input.xml,pass,xbrlfe:sequenceSAVConflicts,xbrlfe:sequenceSAVConflicts xbrlfe:sequenceSAVConflicts
,11205-nonExistentSourceVariable_testcase.xml
,,V-01,Source variable in formula is a parameter with anonymous namespace.,11205-sourceVarIsParam.xsd,pass,xbrlfe:nonexistentSourceVariable,xbrlfe:nonexistentSourceVariable
,,V-02,Source variable in formula is a parameter with defined namespace.,11205-sourceVarIsParam2.xsd,pass,xbrlfe:nonexistentSourceVariable,xbrlfe:nonexistentSourceVariable
,,V-03,Source variable in formula is a general variable.,11205-sourceVarIsGenVar.xsd,pass,xbrlfe:nonexistentSourceVariable,xbrlfe:nonexistentSourceVariable
,,V-04,Source variable in formula is a concept element.,11205-sourceVarIsConcept.xsd,pass,xbrlfe:nonexistentSourceVariable,xbrlfe:nonexistentSourceVariable
,11206-bindEmptySourceVariable_testcase.xml
,,V-01,"The source of a formula contains a QName 
       of a fact variable that can bind to the empty sequence.",11206-sourceVarCanBindEmpty.xsd,pass,xbrlfe:bindEmptySourceVariable,xbrlfe:bindEmptySourceVariable
,,V-02,"The source of a formula contains a QName 
       of a fact variable that can bind to a fallback variable that
       has a QName expression that evaluates to an empty sequence.",11206-sourceVarCanBindEmpty-2-instance.xml,pass,xbrlfe:bindEmptySourceVariable,xbrlfe:bindEmptySourceVariable
,11207-defaultAspectValueConflicts_testcase.xml
,,V-01,"The source of a formula is a QName 
       of a formulas fact variable that binds to a sequence.",11207-formulaSourceIsSequence.xsd,pass,xbrlfe:defaultAspectValueConflicts,xbrlfe:defaultAspectValueConflicts
,12010 Constructing fact value.xml
,,V-01,Tests that a formula with a value that is a singleton XPath expression which is valid.  Context & unit are copied from the input instance bound variable.,12010-just-a-number-instance.xml,pass,,
,,V-02,Tests that a formula with a value that is a singleton XPath expression in a sequence which is valid.  Context & unit are copied from the input instance bound variable.,12010-number-in-seq-instance.xml,pass,,
,,V-03,"Tests that a formula with a value that is a singleton XPath
      expression is valid.",12010-hello-world-str-instance.xml,pass,,
,,V-04,Tests that a formula with a value that is a singleton string in sequence expression which is valid.,12010-hello-world-seq-instance.xml,pass,,
,,V-05,Tests that a formula with a value that is an XPath expression which is not a singleton and thus is invalid,12010-hello-planets-instance.xml,pass,xbrlfe:nonSingletonOutputValue,xbrlfe:nonSingletonOutputValue
,,V-06,"Result of variable > another variable is true when variables are compared in xdt-validated decimal type, but would fail if numbers were compared in xs:untyped (un-validated) mode, or by an XPath 2 implementation which didn't validate objects",12010-num-gt-num-instance.xml,pass,,
,,V-07,Tests that a formula with a value that an empty sequence produces a nil result fact item.,12010-just-a-nil-instance.xml,pass,,
,,V-08,"The intersection of two sequences with no common facts produces an empty sequence result, which produces a fact value that is a nil fact.  The n1 sequence covers period, so all 3 n1's can occupy the same sequence because the uncovered aspects are the same (period is covered, so it doesn't cause partitioning of the n1 sequence).  Consideration of @matches=false also does not split up the sequence because each n1 item has a different period than the other n1 items (even though period is covered, period does get considered as a matching aspect by the @matches processing).",12010-empty-intersection-instance.xml,pass,,
,,V-09,The intersection of two sequences with one common decimal atomic item results in an output sequence of a singleton that successfully produces a fact item.,12010-an-intersection-instance.xml,pass,,
,,V-10,The intersection of two sequences with multiple common decimal atomic item results in an output sequence that is not a singleton and raises the corresponding error.,12010-multiresult-intersection-instance.xml,pass,xbrlfe:nonSingletonOutputValue,xbrlfe:nonSingletonOutputValue
,,V-11,"Tests that a formula with a value that is a singleton fact
      variable bound variable.",12010-just-a-fact-instance.xml,pass,,
,,V-12,The sum of a sequence of facts produces a numeric fact item.,12010-sum-instance.xml,pass,,
,12020 Aspect Rules.xml
,,V-01,"Tests that the nearest source is used for aspect components.  Entity scheme obtained from formula default source, identifier value provided.  Period taken from aspects source.  Unit from multiplyBy source.",12020-nearest-source-instance.xml,pass,,
,,V-02,"Tests that the nearest source is used for aspect components.  As V-01 but Entity scheme from entityIdentifier source, and unit from unit source.",12020-nearest-source-V02-instance.xml,pass,,
,,V-03,"Tests that the nearest source is used for aspect components.  As V-01 but Entity scheme from specifically uncovered entityIdentifier source, and unit from specifically uncovered unit source. (See comments in formula filter arcs.)",12020-nearest-source-V03-instance.xml,pass,,
,,V-04,"The example checks the consistency of the derived RiskedCapital given a
        proportionalRadius determined by a parameter. The RiskedCapital is
        calculated as: RiskedCapital = InvestedCapital * RiskFactor.
        The concept aspect is covered in both factVariables, but an
        explicit qname is provided, so there is no need for uncovered
        qname to find a factVariable with concept uncovered, and formula
        executes properly.",12020-riskedCapital-instance.xml,pass,,
,12021-undefinedSAV_testcase.xml
,,V-01,"The source for the aspect entity identifier rule of the formula 
       does not imply a Source Aspect Value.  This situation is contrived
       by having entityIdentifer source be formula:uncovered, without
       any child elements, and having the entityIdentifier be covered for
       both of the fact variables in this formula.
       In that way no fact can be selected that has this aspect uncovered,
       and the error situation is raised.",12021-v01-undefinedSAV-entity-input.xml,pass,xbrlfe:undefinedSAV,xbrlfe:undefinedSAV
,12030 Concept Rules.xml
,,V-01,"Tests that the output concept is that produced by a QName expression, which in this case reverses the fact item concept name-value matchup sequence, from that of the source input.  E.g., the value, context, and unit of m1 are output as m4, m2 as m3, m3 as m2, and m4 as m1.",12030-dynamic-concept-instance.xml,pass,,
,12040 Entity Rules.xml
,,V-01,Tests that the output entity identifier is that of the input.,12040-source-entity-instance.xml,pass,,
,,V-02,Tests that the output entity scheme is that of the rule instead of the source input.,12040-dynamic-scheme-instance.xml,pass,,
,,V-03,Tests that the output entity identifier and value are that of the formula rule.,12040-dynamic-entity-instance.xml,pass,,
,12050 Period Rules.xml
,,V-01,Tests that the output instant period is that of the input.,12050-source-instant-instance.xml,pass,,
,,V-02,"Tests that the output instant period is that of the formula aspect rule, specified as an xs:date without time portion, so result is midnight at end of that date.  A formula processor may output the produced context as date without time (2008-02-29), or as date with time (2008-03-01T00:00:00 or 2008-02-29T24:00:00).  The test harness comparing produced result to expected result should accept s-equals contexts, so any of these instant (or endDate) dates in the result should be s-equals to each other (2008-02-29, 2008-03-01T00:00:00, or 2008-02-29T24:00:00)",12050-dynamic-instant-instance.xml,pass,,
,,V-03,"Tests that the output instant period is that of the formula aspect rule, specified as an xs:dateTime with time portion, so result is midnight at start of that date.",12050-dynamic-instant-2-instance.xml,pass,,
,,V-04,Tests that the output instant period is that of the item instant date (reported without time) offset by a duration usinga XPath dateTime + duration arithmetic.  Assures that the instant reported without time is offset to subsequent midnight and proper dateTime results.,12050-dynamic-instant-3-instance.xml,pass,,
,,V-05,Tests that the output forever period is that of the formula aspect rule.,12050-dynamic-forever-instance.xml,pass,,
,,V-06,"Tests that the output instant period of end is the day after period end.  E.g., if one had a movement with changes from Jan 1 to Dec 31, balances at start and end would both be New Year Eve's times.  There are two formulas, one to output a result based on instant of the start of source duration item's period, the second to output a result based on the instant of the end of the source duration item's period.",12050-dynamic-start-end-instance.xml,pass,,
,,V-07,"Tests that the output instant period of end with time is as reported.  E.g., if one had a movement with changes from Jan 1 00 hrs to Dec 31 00 hrs, balances at start would be New Year Eve's time but balance at end would be Dec 31 00 hrs (midnight before New Year's eve).  Uses same formula as V-06 to assure proper date with and without time treatment.",12050-dynamic-start-end-2-instance.xml,pass,,
,,V-08,"Tests that the output periods have start date as specified with time 00:00, and end or instant date the day after the specified literal with time 00:00.",12050-literal-period-instance.xml,pass,,
,12060 OCC Rules.xml
,,V-01,Tests that the output OCC segment is that of the input.,12060-source-seg-instance.xml,pass,,
,,V-02,Tests that the output OCC scenario is that of the input.,12060-source-scen-instance.xml,pass,,
,,V-03,Tests that the output OCC segment drops the input segment.,12060-no-source-seg-instance.xml,pass,,
,,V-04,Tests that the output OCC segment drops the input scenario.,12060-no-source-scen-instance.xml,pass,,
,,V-05,Tests that the output OCC segment fragment augments the input segment.,12060-source-seg-aug-frag-instance.xml,pass,,
,,V-06,Tests that the output OCC scenario fragment augments the input scenario.,12060-source-scen-aug-frag-instance.xml,pass,,
,,V-07,Tests that the output OCC segment fragment replaces the input segment.,12060-source-seg-repl-frag-instance.xml,pass,,
,,V-08,Tests that the output OCC scenario fragment replaces the input scenario.,12060-source-scen-repl-frag-instance.xml,pass,,
,,V-09,"Tests that the output OCC segment nodes replaces the input segment.  Note: As
       fn:doc() is used here to load an xml document which does not have a schema,
       and as schema validation is required because the instance document is schema-
       validated, Michael Kay recommends the use of ""lax"" attribute on validation
       so that doc() will succeed despite schema-less instance.  In this case
       nodes are not required to be typed as their values are not consulted by
       anything invoking atomicity processes.",12060-source-seg-repl-node-instance.xml,pass,,
,,V-10,Tests that the output OCC scenario nodes replaces the input scenario.,12060-source-scen-repl-node-instance.xml,pass,,
,12061 Dimension Rules.xml
,,V-01,"Tests that the output segment dimension is that of the input, closed hypercube.",12061-seg-explicit-closedHc-instance.xml,pass,,
,,V-02,"Tests that the output segment dimension is that of the input, open hypercube.",12061-seg-explicit-openHc-instance.xml,pass,,
,,V-03,"Tests that the output segment dimension is that of the input, closed hypercube.",12061-seg-typed-closedHc-instance.xml,pass,,
,,V-04,"Tests that the output segment dimension is that of the input, open hypercube.",12061-seg-typed-openHc-instance.xml,pass,,
,,V-05,"Tests that the output scenario dimension is that of the input, closed hypercube.",12061-scen-explicit-closedHc-instance.xml,pass,,
,,V-06,"Tests that the output scenario dimension is that of the input, open hypercube.",12061-scen-explicit-openHc-instance.xml,pass,,
,,V-07,"Tests that the output scenario dimension is that of the input, closed hypercube.",12061-scen-typed-closedHc-instance.xml,pass,,
,,V-08,"Tests that the output scenario dimension is that of the input, open hypercube.",12061-scen-typed-openHc-instance.xml,pass,,
,,V-10,Tests that the output segment drops dimension of a open hypercube of the input by an omit.,12061-no-seg-explicit-openHc-instance.xml,pass,,
,,V-11,"Tests that the output segment drops dimension of the closed hypercube input by an omit.
      Result concept has a closed dimensionless hypercube.",12061-no-seg-closed-empty-hypercube-instance.xml,pass,,
,,V-12,"Tests that the output segment drops dimension of the open hypercube input by an omit.
      Result concept has a closed dimensionless hypercube.",12061-no-seg-open-empty-hypercube-instance.xml,pass,,
,,V-13,"Tests that the output segment doesn't drop dimension of the input without an omit.
      Result concept has closed dimensionless hypercube and isn't supposed to have a dimension.
      Result fails ordinary xbrl dimensional validation.",12061-nonempty-empty-hypercube-instance.xml,pass,xbrldie:PrimaryItemDimensionallyInvalidError,xbrldie:PrimaryItemDimensionallyInvalidError
,,V-14,"Tests that the dimension aspect, coming from source segment, goes into the scenario per the DTS definition of the output concept, closed hypercube.",12061-seg-typed-dim-to-scen-closedHc-instance.xml,pass,,
,,V-15,"Tests that the dimension aspect, coming from source segment, goes into the scenario per the DTS definition of the output concept, open hypercube.  (Segment has empty closed hypercube to block it going there.)",12061-seg-typed-dim-to-scen-openHc-instance.xml,pass,,
,,V-16,"Tests that the output segment omits one of the explicit
      dimensions of the input and leaves two other dimensions
      undisturbed. Omits only eg:ExplDim1.  Closed hypercube.",12061-omit-1st-of-3-seg-dims-instance.xml,pass,,
,,V-17,Tests that the output segment omits one of the typed dimensions of the input and leaves two other dimensions undisturbed.  Omits only eg:TypedDim1. Closed hypercube.,12061-omit-1st-of-3-seg-dims-typed-instance.xml,pass,,
,,V-18,Tests that the output segment changes just one of the explicit dimensions of the input and leaves two other dimensions undisturbed.  A static qname is provided for the replacement member.  Closed hypercube.,12061-alter-static-seg-explicit-instance.xml,pass,,
,,V-19,Tests that the output OCC xpath rule throws an error trying to affect the dimension aspect.,12061-alter-xpath-seg-explicit-instance.xml,pass,xbrlfe:badSubsequentOCCValue,xbrlfe:badSubsequentOCCValue
,,V-20,Tests that the output OCC segment fragment rule throws an error if trying to set a dimension aspect,12061-alter-fragment-seg-explicit-instance.xml,pass,xbrlfe:badSubsequentOCCValue,xbrlfe:badSubsequentOCCValue
,,V-21,Tests that the output segment changes just each of the explicit dimensions of the input and leaves other typed dimension undisturbed.  A dynamic qname expression is provided for each of two altered members.  Two dimension rules in tandem are provided.  Closed hypercube,12061-alter-dynamic-seg-explicit-closedHc-instance.xml,pass,,
,,V-22,Tests that the output segment changes just each of the explicit dimensions of the input and leaves other typed dimension undisturbed.  A dynamic qname expression is provided for each of two altered members.  Two dimension rules in tandem are provided.  Open hypercube,12061-alter-dynamic-seg-explicit-openHc-instance.xml,pass,,
,,V-23,"Tests that the output segment assembles dimension from three separate input fact items, showing that specific dimensions can be taken from different combinations contexts of bound variables.  v1 has 3 dimensions, explDim1, explDim2, and typedDim1, but only typedDim1 is taken, v2 has 2 dimensions, explDim2 and typedDim1 but only explDim2 is taken, and v3 has just explDim1 which is taken for the output.  Closed hypercube.",12061-assemble-seg-dims-instance.xml,pass,,
,,V-24,The output result has a rule-created dimension aspect for open hypercubes in both segment and scenario.  The aspect can go into either segment or scenario hypercube (there is no way to direct where to put it and the semantic effect and validity is the same regardless of where it gets put).  Thus the result file is marked with comments on the two possibilities that either segment or scenario may be the resulting location.,12061-create-dim-to-either-seg-or-scen-instance.xml,pass,,
,,V-25,Tests that the output xpath rule produces the typed dimension aspect.,12061-alter-xpath-seg-typed-instance.xml,pass,,
,,V-26,Tests that the output xpath rule detects error on multi-node sequence.,12061-alter-xpath-seg-typed-instance2.xml,pass,xbrlfe:wrongXpathResultForTypedDimensionRule,xbrlfe:wrongXpathResultForTypedDimensionRule
,,V-27,Tests that the output value rule produces the typed dimension value,12061-alter-value-seg-typed-instance.xml,pass,,
,12062 DimensionUncovered Rules.xml
,,V-01,Tests that the output OCC segment is that of the input.,12062-source-seg-explicit-instance.xml,pass,,
,,V-02,Tests that the output OCC segment is that of the input.,12062-source-seg-typed-instance.xml,pass,,
,,V-03,Tests that the output OCC scenario is that of the input.,12062-source-scen-explicit-instance.xml,pass,,
,,V-04,Tests that the output OCC scenario is that of the input.,12062-source-scen-typed-instance.xml,pass,,
,,V-05,"Tests that the output OCC segment assembles dimension from three separate input fact items, showing that specific aspects can be taken from uncovered aspects of bound variables.  
All variables have same dimensions but uncover aspects for the result only as follows:
v1 uncovers typed dim, v2 uncovers expl dim2 and entity identifier, and v3 uncovers expl dim1 and period.",12062-assemble-seg-dims-instance.xml,pass,,
,,V-06,"Same as v-05 but tests that the output OCC segment assembles dimension from three separate input fact items, where the explicit dimensions (of V-05) are added by OCC rules because they aren't in the original source instance document.  Test assures that formula processor adds output dimensions by rules when not in input sources when using formula:uncovered.",12062-assemble-with-rules-seg-dims-instance.xml,pass,,
,,V-07,"Same as v-05, but the explicit dimension is covered by the three variables,
      and so, it is not in the output fact. The set of aspects of the uncovered
      source is a subset of the set of aspects of input facts.",12062-assemble-part-seg-dims-instance.xml,pass,,
,,V-08,"Same as v-05, but the output value for ExplDim1 has a rule that
      overrides the value of the SAV.",12062-assemble-over-seg-dims-instance.xml,pass,,
,,V-09,"Same as v-05, but the formula has a rule to omit the value 
      for ExplDim1.",12062-assemble-omit-seg-dims-instance.xml,pass,,
,,V-10,"Same as v-07, but there is a rule that omits the typed dimension,
      which in any case is not in the source.",12062-assemble-part-omit-seg-dims-instance.xml,pass,,
,,V-11,"Same as v-05, but input facts have a different aspects: 
      variables 2 and 3 are bound to facts with no typed dimension.",12062-assemble-diff-seg-dims-instance.xml,pass,,
,12070 Unit Rules.xml
,,V-01,Tests that the output unit is that of the input.  In this case a custom kilometers/hours unit construct is used.,12070-source-measures-instance.xml,pass,,
,,V-02,"Tests that the output unit reflects that of the unit aspect rule, which replaces that of the source referenced fact item unit, because it has augment=false.",12070-dynamic-multBy-instance.xml,pass,,
,,V-03,"Tests that the output unit can be assembled from a referenced monetary item (in iso4217:USD measure) divided by a price-per-share (in shares/USD unit).  The nearest referenced fact is iso4217:USD (investment amount), and the unit rules multiply by xbrli:shares and divide by iso4217:USD (reflecting dividing a dollars amount by a price per share), which results in a generated output fact item unit in xbrli:shares.  QName expressions are used for the measures manipulation.  Augment is left off (implying true).",12070-dynamic-multDivToShares-instance.xml,pass,,
,,V-04,"Tests that the output unit can be assembled from a referenced monetary item (in iso4217:USD measure) divided by a price-per-share (in shares/USD unit).
     The nearest referenced fact is iso4217:USD (investment amount), and the unit rules multiply by xbrli:shares and divide by iso4217:USD (reflecting dividing a dollars
     amount by a price per share), which results in a generated output fact item unit in xbrli:shares.
     QName expressions are used for the measures manipulation.",12070-dynamic-multDivToShares2-instance.xml,pass,,
,,V-05,"The formula produces a numeric item but it doesn't have a unit aspect rule  
      for unit aspect.  The formula has a non-numeric fact as source, so there is no
      source unit aspect rule to use.",12070-non-numeric-source-instance.xml,pass,xbrlfe:missingUnitRule,xbrlfe:missingUnitRule
,,V-06,"The formula produces a numeric item with a non-numeric source fact. The formula contains a unit rule
      with augment=true. The SAV for unit is not defined, and thus the unit rule effectively augments
      an empty set of numerators to produce a valid unit rule.",12070-non-numeric-source-augmenting-measure-instance.xml,pass,,
,,V-07,"As per V06, except that the formula unit rule has augment=false. SAV is again undefined and the non-numeric
      source is irrelevant, so result is the same.",12070-non-numeric-source-non-augmenting-measure-instance.xml,pass,,
,12080 Constructing accuracy.xml
,,V-01,"No accuracy rules are specified and the default accuracy is a precision of zero. Given that the fact value is 1000000, a decimals value of -7 implies a precision of 0.",12080-dec-omit-prec-omit-instance.xml,pass,,
,,V-02,"The precision accuracy rule evaluates to 1 so software is required to report a precision of 1. Given that the fact value is 1000000, a decimals value of -6 implies a precision of 1.",12080-dec-omit-prec-1-instance.xml,pass,,
,,V-03,"The decimals accuracy rule evaluates to -6 so the fact is required to be reported with an accuracy implying a @decimals attribute value of -6. Given that the fact value is 1000000, a decimals value of -6 implies a precision of 1.",12080-dec--6-prec-omit-instance.xml,pass,,
,14010 Use Cases Basic Calculation.xml
,,V-01,"Compute assets based on liabilities plus equity, with the result
      having the same context as the addends.",14010-computeAssets-instance.xml,pass,,
,14020 Use Cases Movement.xml
,,V-01,"This accounting pattern example demonstrates the use of
      cross context period operations.  The starting balance
      is an instant period.  Changes are duration, and filtering
      matches changes start data to the beginning balance period's
      instant date.  The resulting fact is given an instant date
      of the changes period end date.
      
      Due to use of the instantDuration period, the first fact
      to bind is the changes and then the instantDuration fiter
      filters for the starting balance matching the beginning of the
      duration period.",14020-simpleMovement-instance.xml,pass,,
,21201_noCustomFunctionSignature_testcase.xml
,,V-01,"The custom function in a value expression 
      does not have a custom function signature within the DTS.",21201-movement-valueFn-concepts.xsd,pass,xbrlve:noCustomFunctionSignature,xbrlve:noCustomFunctionSignature
,,V-03,"The custom function in a filter qnameExpression
      does not have a custom function signature within the DTS.",21201-movement-filterFn-concepts.xsd,pass,xbrlve:noCustomFunctionSignature,xbrlve:noCustomFunctionSignature
,,V-02,"The custom function in a decimals expression 
      does not have a custom function signature within the DTS.",21201-movement-decimalsFn-concepts.xsd,pass,xbrlve:noCustomFunctionSignature,xbrlve:noCustomFunctionSignature
,21221-parameterNameClash_testcase.xml
,,V-01,"There are two parameters in the DTS that have the same QName in their
      @name attributes.",21221-paramNameClash.xsd,pass,xbrlve:parameterNameClash,xbrlve:duplicateVariableNames xbrlve:parameterNameClash
,21222-parameterCyclicDependencies_testcase.xml
,,V-01,"Parameter p1 depends on parameter p2, whose XPath expression in @select attribute refers to parameter p3 which depends on p1.
There is a circular dependency among parameter p1, p2, and p3.",paramCyclicDependencies.xsd,pass,xbrlve:parameterCyclicDependencies,xbrlve:parameterCyclicDependencies xbrlve:parameterCyclicDependencies xbrlve:parameterCyclicDependencies
,,V-02,Parameter p1 depends on itself.,paramCyclicDependencies2.xsd,pass,xbrlve:parameterCyclicDependencies,xbrlve:parameterCyclicDependencies
,21231-parameterTypeMismatch_testcase.xml
,,V-01,"The parameter value determined by the @select attribute 
      is a QName and can't be converted to an xs:date.",21231-paramTypeMismatch1-instance.xml,pass,xbrlve:parameterTypeMismatch,xbrlve:parameterTypeMismatch
,,V-02,"The parameter value determined by the @select attribute 
      is a float and can't be converted to a QName.",21231-paramTypeMismatch2-instance.xml,pass,xbrlve:parameterTypeMismatch,xbrlve:parameterTypeMismatch
,,V-03,"The parameter value supplied by the processing application, from this 
      testcase variation.  The <data><parameter ...> construct 
      is that of an xs:double and the parameter is required=""true"", 
      but the formula processor declares it as a QName, which causes an error 
      when the formula processor attempts to convert from the double supplied by
      the processing application to the QName required by the formula processor.
      (Note: as it is likely that the parameter is not processed until
      instance document execution, this variation provides such an instance
      document to ensure the processing application supplies the parameter.)",21231-paramTypeMismatch3-instance.xml,pass,xbrlve:parameterTypeMismatch,xbrlve:parameterTypeMismatch
,21233 General Variable Static Analysis.xml
,,V-01,Tests that select attribute fails static analysis of XPath expression.,21233-selectIsNotXPath-instance.xml,pass,err:XPST0003,err:XPST0003
,,V-02,Tests that select attribute fails static analysis due to unresolvable qname.,21233-selectUnresolvableQName-instance.xml,pass,xbrlve:unresolvedDependency,xbrlve:unresolvedDependency xbrlve:unresolvedDependency
,,V-03,"Tests that select attribute fails static analysis due to qname whose prefix is not statically resolvable, thus raising XPath XPST0081 error.",21233-errorResolvingQName-instance.xml,pass,err:XPST0081,err:XPST0081 xbrlve:unresolvedDependency xbrlve:unresolvedDependency
,21241 Fact Variable Static Analysis.xml
,,V-01,"Tests that the XPath2 generated by filters fits in a parenthesized expression. (Spec reference: ""If a fact variable is using a filter rather than its complement, then the XPath expression implied by that filter is surrounded by round brackets (, and ) before inclusion in the XPath expression implied by the fact variable"")  The resulting XPath would be ""facts-in-instance()[(true()))]"", which is an XPath2 static syntax error.",21241-miswrapParentheses-instance.xml,pass,err:XPST0003,err:XPST0003
,21251 Variable Set Duplicate Names.xml
,,V-01,Tests that duplicate fact variable names in a variable set generate an error.,21251-duplicateFactVariableNameInSet-instance.xml,pass,xbrlve:duplicateVariableNames,xbrlve:duplicateVariableNames
,,V-02,Tests that duplicate general variable names in a variable set generate an error.,21251-duplicateGeneralVariableNameInSet-instance.xml,pass,xbrlve:duplicateVariableNames,xbrlfe:nonexistentSourceVariable xbrlve:duplicateVariableNames
,,V-03,Tests that duplicate parameter names in a variable set generate an error.,21251-duplicateParameterNameInSet-instance.xml,pass,xbrlve:duplicateVariableNames,xbrlve:duplicateVariableNames
,,V-04,Tests that a variable with the same name as global parameter doesn't generate an error.,21251-VariableNameIsSameAsGlobalParameter-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-05,Tests that a local parameter with the same name as global parameter doesn't generate an error.,21251-ParameterNameIsSameAsGlobalParameter-instance.xml,pass,"{'assertion2': (1, 0), 'assertion': (1, 0)}","{'assertion2': (1, 0), 'assertion': (1, 0)}"
,,V-06,Tests that the same variable name used in two different variable sets doesn't generate an error.,21251-SameVariableNamesInSeperateSets-instance.xml,pass,"{'assertion2': (1, 0), 'assertion': (1, 0)}","{'assertion2': (1, 0), 'assertion': (1, 0)}"
,21261 VariableFilter Relationship.xml
,,V-01,"These are unique to formula linkbase, there is no general mechanism to test these is in place.  In this test the arc is reversed, so it is ignored.  There is no defined error, so the formula will work as if the arc was not there.  This results in an instance value which would not complete evaluation if the arc was honored.",21261-variableFilterRelationship-instance.xml,pass,,
,21271 VariableSetFilter Relationship.xml
,,V-01,"These are unique to formula linkbase, there is no general mechanism to test these is in place.  In this test the arc is from a variable instead of variable-set, so it is ignored.  There is no defined error, so the formula will work as if the arc was not there.  This results in an instance value which would not complete evaluation if the arc was honored.",21271-variableSetFilterRelationship-instance.xml,pass,,
,21291 VariableSet Relationship.xml
,,V-01,"There is no general mechanism to test these arc roles with ends differing from that specified to be effective.  In this test a variable-set relationship arc is from a formula (variable-set) to a filter, so it is not deemed to define a fact variable, and thus the formula should have no fact variables, and produce only one evaluation (as noted in the expected result instance).  If the arc were incorrectly recognized as defining a variable, then there would be two factVariable bindings, resulting in two formula evaluations and two output fact items, which conflicts with the expected instance result file.",21291-variableSetRelationship-instance.xml,pass,,
,21321-unkownAspectModel_testcase.xml
,,V-01,"The variable set of a variable-set resource with an @aspectModel attribute 
       NoN-dImEnSiOnAl, showing that case-sensitive matching is used.",21321-unknownAspectModel1.xsd,pass,xbrlve:unknownAspectModel,xbrlve:unknownAspectModel
,,V-02,"The variable set of a variable-set resource with an @aspectModel attribute 
       foobar, that is not part of the current spec.",21321-unknownAspectModel2.xsd,pass,xbrlve:unknownAspectModel,xbrlve:unknownAspectModel
,21322-aspectModelMismatch_testcase.xml
,,V-01,Dimensional aspect covered is not in the model,21322-aspectModelMismatch-v01.xsd,pass,xbrlve:filterAspectModelMismatch,xbrlve:filterAspectModelMismatch
,,V-02,Segment aspect covered is not in the model,21322-aspectModelMismatch-v02.xsd,pass,xbrlve:filterAspectModelMismatch,xbrlve:filterAspectModelMismatch
,21363-unresolvedDependency_testcase.xml
,,V-01,"The value XPath expression has a 
     variable dependency on $v:c2 that is not defined, only v:c1 is defined,
     thus $v:c2 cannot be resolved to a variable or parameter.
     In this case $v:c2 has an explicit namespace identifier.",21363-unresolvedValueExprDependency1.xsd,pass,xbrlve:unresolvedDependency,xbrlve:unresolvedDependency
,,V-02,"The value XPath expression has a 
     variable dependency on $c2 that is not defined, only c1 is defined,
     thus $c2 cannot be resolved to a variable or parameter.
     In this case $c2 has a null-namespace named identifier.",21363-unresolvedValueExprDependency2.xsd,pass,xbrlve:unresolvedDependency,xbrlve:unresolvedDependency
,,V-03,"The filter qnameExpression XPath expression has a 
     variable dependency on $v:c2 that is not defined, only v:c1 is defined,
     thus $v:c2 cannot be resolved to a variable or parameter.",21363-unresolvedFilterExprDependency.xsd,pass,xbrlve:unresolvedDependency,xbrlve:unresolvedDependency
,21851-factVariableReferenceNotAllowed_testcase.xml
,,V-01,"A filter associated with fact variables by a variable-set-filter 
      implies an XPath expression that includes an XPath variable reference 
      to a fact variable.",21851-varSetFilterFactVarDependency.xsd,pass,xbrlve:factVariableReferenceNotAllowed,xbrlfe:bindEmptySourceVariable xbrlve:factVariableReferenceNotAllowed
,,V-02,"A filter associated with fact variables by a variable-set-filter 
      implies an XPath expression that includes an XPath variable reference 
      to a general variable.",21851-varSetFilterGenVarDependency.xsd,pass,xbrlve:factVariableReferenceNotAllowed,xbrlfe:bindEmptySourceVariable xbrlve:factVariableReferenceNotAllowed
,21930-cyclicDependencies_testcase.xml
,,V-01,"A variable set where there are circular dependencies 
      in the references to variables.  In this case the fact variable has a
      identifer filter dependent on the identifier value in general variable
      $v:g2, which is produced from general variable $v:g1, which is derived
      (cyclically on purpose here) from the identifier of the same fact variable.",21930-cycleFvGvGvDependency.xsd,pass,xbrlve:cyclicDependencies,xbrlfe:bindEmptySourceVariable xbrlve:cyclicDependencies xbrlve:cyclicDependencies xbrlve:cyclicDependencies
,22010 XPath Usage.xml
,,V-01,"Tests that character entity encodings are accepted, here the quotation mark, represented as &quot; instead of "", and &lt; instead of <, etc.",22010-character-encodings-instance.xml,pass,,
,,V-03,"Tests that XPath function names with no prefix are treated
       as XPath 2 functions (and do not get confused with the
       xmlns=""namespace"" default namespace.  This is to support
       the XPath 2 conventions of omitting the ""fn"" namespace on
       functions.  There is extensive googlable information on
       Saxonica and other implementations that suggest fn: should not
       be used on the XPath 2 built-in functions.  In this variation both
       fn: and no-prefix are tested, with the default QName
       prefix deliberately set to the concepts taxonomy.  If the
       default namespace is applied for XPath function QNames this
       test will fail to compile. (Caveat:  the xmlns:fn may for
       some processors may need to be changed to ""http://www.w3.org/2005/02/xpath-functions"" instead of ""http://www.w3.org/2005/xpath-functions"".
       If so you might need to hand-edit 22010-fn-prefix-formula.xml,
       the xmlns:fn= line.
       This uncertainty of correct namespace is one reason (excuse)
       why it is ususally suggested to omit the fn: prefix and
       xmlns for XPath 2 function namespace.)",22010-fn-prefix-instance.xml,pass,,
,,V-04,Tests that XPath2 comments are accepted in expressions,22010-comments-instance.xml,pass,,
,,V-05,"Tests that XPath 1 compatibility mode is not used.  This is tested
       by subtracting two xs:dates.  In XPath 1 compatibility mode the
       result is double NaN, but in the 2.0 mode the result
       is of type xs:dayTimeDuration.",22010-xpath1-compatibilityMode-instance.xml,pass,,
,,V-06,"Tests that XPath evaluation exceptions are raised.  In this case
       a static error is created by too many right parentheses.",22010-xpath-static-error-instance.xml,pass,err:XPST0003,err:XPST0003
,,V-07,"Tests that XPath evaluation exceptions are raised.  In this case
       a dynamic expression ensures dynamic run-time evaluation by trying
        to divide a string-length by the minutes of the instant which
        will be zero because it was reported as a date, causing a divide
        by zero dynamic error.",22010-xpath-dynamic-error-instance.xml,pass,err:FOAR0001,err:FOAR0001
,,V-08,"Tests that XPath evaluation exceptions are raised.  In this case
       a dynamic expression tries to compare a dateTimeItemType concept which
       is an xbrli:dateUnion fact (reported as date without time) 
       to an xs:dateTime returned by xfi:periodInstant function, 
       so this results in a run time type error.",22010-xpath-dynamic-type-error-instance.xml,pass,err:XPTY0004,err:XPTY0004
,,V-09,"Tests that XPath evaluation exceptions preventable by type-safe
       coding.  Here (if not empty or nil) 
       a dynamic expression compares a dateUnion fact (reported without time) 
       to the xf:periodInstant function result, and has type-safe code
       to change when reported as date without time into a dateTime of next
       midnight.",22010-xpath-dynamic-type-safe-1-instance.xml,pass,,
,,V-10,"Same as V-09, here the dateUnion fact is reported with time.",22010-xpath-dynamic-type-safe-2-instance.xml,pass,,
,,V-11,"Same as V-09, here the dateUnion fact is reported as nil.",22010-xpath-dynamic-type-safe-3-instance.xml,pass,,
,,V-12,"An external XML file's table, loaded by fn:doc, contains rates (decimal) and categories (QNames) each with lower and upper number threshold for lookup, maybe like a primitive tax rates step table.  The instance provides values for each step, and the formula assures that the nodes are delivered of proper type in atomization for the value expression.",22010-table-lookup-xml-doc-instance.xml,pass,,
,,V-13,"An external XML file's table, loaded by fn:doc, is located by the static context of the formula element containing the xpath expression, which in this case is the same directory as that containing the formula, because there is no xml:base attribute.",22010-base-1-instance.xml,pass,,
,,V-14,"An external XML file's table, loaded by fn:doc, is located by the static context of the formula element containing the xpath expression, which in this case is the two directories below that containing the formula.",22010-base-2-instance.xml,pass,,
,,V-15,"An external XML file's table, loaded by fn:doc, is located by the static context of the formula element containing the xpath expression, which in this case is three beneath that containing the formula, specified by an xml:base attribute.",22010-base-3-instance.xml,pass,,
,,V-15a,"An external XML file's table, loaded by fn:doc, is located by the static context of the formula element containing the xpath expression, the parent of containing element contributes subdir-1/, the containing element contributes subdir-2 without ending /, so the actual base remains subdir-1.",22010-base-4-instance.xml,pass,,
,,V-15b,"An external XML file's table, loaded by fn:doc, is located by the static context of the formula element containing the xpath expression,
       the formula element's xml:base being a directory with spaces in the name.",22010-base-5-instance.xml,pass,,
,,V-16,The absence of a mechanism to provide a default-collation implies it must be the unicode sequence.  The XPath2 functions and operators spec requires this unicode sequence namespace: http://www.w3.org/2005/xpath-functions/collation/codepoint.,22010-default-collation-instance.xml,pass,,
,22015 Custom Function Signatures Processing.xml
,,V-01,"Use of custom function for example 0017, to replace the
      general variable as noted in comments embedded in
      variation's formula linkbase.  (Simplified to avoid
      0018's consistency assertion, here just to provide
      output result instance.)  Test suite must implement
      the custom function my-fn:PDxEV in order to execute
      this test case.",Corep18-WeightedAverage-instance.xml,pass,,
,22020 Parameters.xml
,,V-01,Tests that a formula with a value expression dependent on a parameter value properly sequences execution and dependency.,22020-paramToFormula-instance.xml,pass,,
,,V-01a,Same as V-01 but a different parameter than the one with the arc is accessed by the (global0 name on the parameter.,22020-paramToFormula-instance2.xml,pass,,
,,V-01b,Same as V-01 but a variable-set arc name specifies different parameter than the one with the (same) global name on the parameter.,22020-paramToFormula-instance3.xml,pass,,
,,V-01c,Same as V-01 but a FactVariable's variable-set arc name specifies same name the one with the (same) global name on the parameter.,22020-paramToFormula-instance4.xml,pass,,
,,V-02,"Tests that a fact variable, with a name filter qname expression dependent on a parameter value, properly sequences execution and dependency.  The parameter provides a localname for the qname expression of the fact variable concept name filter.",22020-paramToFv-instance.xml,pass,,
,,V-03,"Tests that a fact variable, with an ""as"" parameter, provides correctly typed value.  Also tests that a precondition can access parameter and check that it is an instance of the right type.",22020-paramIsQName-instance.xml,pass,,
,,V-04,"Tests that a parameter value can't be converted to an ""as"" typed value.",22020-paramNotQName-instance.xml,pass,xbrlve:parameterTypeMismatch,xbrlve:parameterTypeMismatch
,,V-05,"Tests that a parameter value can be a sequence.  (Test originally written when it couldn't be a sequence, but now this is allowed, so please excuse the file names from before.)  The result requires a single evaluation of the parameter, for that reason the third member of the sequence is chosen, to be sure that iterative evaluation is not used for parameter sequences.",22020-paramNotSequence-instance.xml,pass,,
,,V-06,"Tests that a parameter value can be obtained externally.  Parameter element, attribute @name, the QName value ""p1"", within this testcase variation, does not have a prefix and thus inherits the xmlns default namespace of the container (which here is http://xbrl.org/2008/conformance). (In XPath 2, variable and function names have no-namespace characteristics which are unique to XPath, but that is only within XPath, and not also applying to Variable Spec unique features like parameter names.  Thus here we test that ordinary namespace handling occurs.)",22020-stringToParam-instance.xml,pass,,
,,V-07,Same as V-06 but parameter element @name attribute prefix is declared by xmlns in the test driver <parameter> element.,22020-stringToNsParam-instance.xml,pass,,
,,V-07a,"Same as V-06 but parameter element @name attribute's QName value has no prefix, and thus an xmlns='' is provided for the no-namespace name parameter, which requires a prefix on the test driver <parameter> element.",22020-stringToNoNsParam-instance.xml,pass,,
,,V-08,"Same as V-06 but parameter is expected to be casted by test driver to formula processor as an atomic or element of type xs:date.  Also note that parameter inside formula linkbase uses default xmlns namespace (no-parameter), and in testcase file uses explicit prefix.",22020-dateToParam-instance.xml,pass,,
,22030 General Variables.xml
,,V-01,"Tests that a general variable with a value dependent on a fact variable properly sequences execution and dependency.  The order numbers on the variable arcs are reverse of what is needed to properly execute dependency, to assure that the formula processor sorts out variable dependency within the XPath expressions, and not based on the XLink arc order attribute.  The fact variable has the string ""hello"" which the general variable concatenates to "" world"".  The formula expression displays the general varaible.",22030-hello-world-fvToGv-instance.xml,pass,,
,,V-01a,Same as V-01 but dependency has more dependencies to assure dependency order is worked out completely.,22030-hello-world-fvToGv-2-instance.xml,pass,,
,,V-02,"Tests that a fact variable with a value dependent on a general variable properly sequences execution and dependency.  The order numbers on the variable arcs are reverse of what is needed to properly execute dependency, to assure that the formula processor sorts out variable dependency within the XPath expressions, and not based on the XLink arc order attribute.  The general variable evaluates dynamically to the local name of the fact variable, which must then be subsequent in execution.  The formula expression depends on the general variable.  The general variable also is ""tricked"" to be sure that it has the xbrli:xbrl node as its context.",22030-hello-world-gvToFv-instance.xml,pass,,
,,V-03,Tests that a general variable can have a sequence. Variation V-02 is used here in all other respects.,22030-hello-world-gvSeqToFv-instance.xml,pass,,
,,V-04,"Tests that a general variable can be bound to a doc() file node, and that the doc file nodes provide typed values to XPath expressions.",22030-fvToGv-lookupTableRow-instance.xml,pass,,
,,V-05,"General variable is the only variable in variable set, which binds to an empty sequence, and its emptyness, or it's being just alone without fact variables, does not prevent evaluation of the variable sequence.",22030-GvEmptySeq-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,22040 Fact Variables.xml
,,V-01,"Tests that a fact variable with a value dependent on a fact variable properly can access the value that it is dependent on and that processing sequences execution and dependency.  (This sort of extends the 22030 tests to fact variables.)  The order numbers on the variable arcs are absent in this test case (implying order=""1"" for each), and in physical reverse of what is needed to properly execute dependency, to assure that the formula processor sorts out variable dependency within the XPath expressions, and not based on physical linkbase order.  The initial concept to be processed, via fact variable $c3, provides the localname for the name filter for the second fact variable, $c2, which provides the localname for the final fact variable, $c1, which has the string ""hello"" which the result concatenates to "" world"".",22040-hello-world-fvToFv-instance.xml,pass,,
,,V-02,"Tests that a fact variable has, as the candidate items to be filtered, all non-nil facts in instance irrespective of location (within nested tuples, etc).  All items are non-nil in this variation. In this case $c1 filters all facts that are name-filtered to eg:c1, which lists all planets for hello result.  @nils is not specified so nils are excluded. (Since the bindAsSequence allows random order of nodes, the expression $c1 | () passes the sequence through the union operator, which guarantees document order of the nodes, so that the final result's order can be compared dependably.)",22040-hello-c1-factsInInst-instance.xml,pass,,
,,V-02a,"Same as V-02a, instance includes nil items, nils=true.",22040-hello-c1-factsWithNilsInInst-instance.xml,pass,,
,,V-02b,"Same as V-02a, instance includes nil items, nils=false.",22040-hello-c1-factsWithoutNilsInInst-instance.xml,pass,,
,,V-02c,"Same as V-02a, instance includes CDATA items.",22040-hello-c1-factsWithCdataInInst-instance.xml,pass,,
,,V-02d,"Same as V-02a, instance includes item with defaulted value.  Note that XPath 2 in section I.3 specifies ""Schema validation augments the data model by adding default values for omitted attributes and empty elements.""",22040-hello-factsInInstWithDefault-instance.xml,pass,,
,,V-03,"Same as V-02, but $c1 filters all facts that are NOT name-filtered to eg:c2 or eg:t1, which lists all planets for hello result.",22040-hello-not-c2-or-t1-factsInInst-instance.xml,pass,,
,,V-03a,"Same as V-02, but $c1 filters all items and tuples that are NOT conceptName-filtered to eg:c2, which binds to both c1's and t1's in the instance.  XPath evaluation raises error in trying to atomize $c1 sequence t1 tuples bound into the sequence, for string-join function: FOTY0012 (An attempt was made to find the typed value of a node that has no typed value. This occurs, for example, when you pass to the data function an element node whose type has element-only content. It may also be raised during atomization, which extracts the typed value of a node.  Both FOTY0012 issues occur in this variation.)",22040-hello-not-c2-factsInInst-instance.xml,pass,err:FOTY0012,err:FOTY0012
,,V-04,"Tests that each filtered fact is an element node from the instance document, and that general variables which derive a value from an expression involving the document node maintain the node's type.  This would fail if any fact were instead an atomic value, or if the corresponding node type annotation were not available.  The type of the decimal node is checked for either xs:decimal, xs:float or xs:double, to allow flexibility in implmentations.  Unit aspect is covered on numeric item so one evaluation results.",22040-typeOfFactNode-instance.xml,pass,,
,,V-04a,"Same as V-04 but here unit is not covered which prevents success of implicit matching, so no evaluations occur.",22040-typeOfFactNode-a-instance.xml,pass,,
,,V-05,"Same as V-04 but the namefilter4 is replaced with a value filter.  The expression is type sensitive, so if it is applied to a concept of a different type it will throw an XPTY0004 error.  The filter is expected to test each concept (both of the matching and of incompatible types), so the error is expected.",22040-typeErr-1-instance.xml,pass,err:XPTY0004,err:XPTY0004
,,V-06,Sort of like V-04 but instead of a conceptName filter there is a general filter on fact variables to identify the facts for each variable by data type and value.  Sets stage for V-07 which will require that general filter only match expected concept.  Here each general filter is type-safe coded with an XPath if construct.,22040-valueOfFactData-instance.xml,pass,,
,,V-08,"This case is used to attest that the formula processor must not bind a nil value fact. It must treat nil value fact as if it is absent.
If the processor were to bind then the assertion count would be one not satisfied.
(Contributed by Haizhen Li, Bank of France, 2012-04-13, by e-mail of same date to Formula WG)",nil-not-bind-instance.xml,pass,"{'assertion': (0, 0)}","{'assertion': (0, 0)}"
,22050 Filters.xml
,,V-01,"Test that a filter produces an effective boolean value.  Uses a general filter which implies an expression .[$test], wherein the test is the function fn:true() here.",22050-effectiveBooleanResult-instance.xml,pass,,
,,V-02,"Same as V-01 but uses a general filter which produces a QName object, which XPath2 cannot convert into an effective boolean result.  If implmented with XPath 2 this should produce an error, err:FORG0006, and otherwise an implementation defined error.",22050-not-effectiveBooleanResult-instance.xml,pass,err:FORG0006,err:FORG0006
,22060 Variable Names.xml
,,V-01,"Tests that XPath variable names with no prefix are treated
       by syntax as ""no namespace"" variables and do not take the default xmlns
       namespace.  The default xmlns namespace is only to be
       used in XPath for QName expansion, which is tested by giving
       xmlns default to the schema file namespace for concepts, so the
       qname for the concept, c1, has no prefix.  If the XPath variable
       $c2, which has no prefix, is instead treated as having the
       default xmlns, the output would be ""hello Earth, Venus, and Venus"",
       instead of the correct output hello ""Earth, Venus, and Mars"".",22060-default-xmlns-on-root-instance.xml,pass,,
,,V-02,Same as V-01 except for location of default namespace declaration.,22060-default-xmlns-on-extended-link-instance.xml,pass,,
,,V-03,Same as V-01 except for location of default namespace declaration.,22060-default-xmlns-on-arc-instance.xml,pass,,
,,V-04,Same as V-01 except for location of default namespace declaration.,22060-default-xmlns-on-expression-instance.xml,pass,,
,,V-05,Same as V-01 except for no default namespace declaration.,22060-default-xmlns-on-source-instance.xml,pass,,
,,V-07,"Same as V-01, except no default xmlns'es.",22060-missing-xmlns-for-arc-name-instance.xml,pass,xbrlve:variableNameResolutionFailure,xbrlve:variableNameResolutionFailure
,,V-09,"Same as V-01, except no default xmlns'es.",22060-missing-xmlns-for-xpath-variable-instance.xml,pass,err:XPST0081,err:XPST0081 xbrlve:unresolvedDependency
,,V-10,"Same as V-01, except no default xmlns'es.",22060-local-xmlns-for-each-variable-instance.xml,pass,,
,22070 Variable Set Filter Relationships.xml
,,V-02,"Tests that variable set filter relationships behave as group filters.  Otherwise same as V-01, but here provides data sets for each of several (filtered-away) identifiers.  Group filter selects AAA001 identifiers, rejects others.",22070-varSet-filter-anIdent-instance.xml,pass,,
,,V-03,"Tests that variable set filter relationships behave as group filters.  Otherwise same as V-02, but here provides data sets for each of several (filtered-away) identifiers.  Group filter selects complement of BBB002 identifiers, which should accept AAA001 identifier only.",22070-varSet-filter-notAnIdent-instance.xml,pass,,
,22090 Variable Set Relationship.xml
,,V-01,"Tests that a variable's name, given by the arc, is independent of shared nature of variable.  Three formulas share variable but give it different names on each arc.",22090-sharedVariablesDiffNames-instance.xml,pass,,
,,V-02,"Tests that the name given on the arc is used to access the parameter in a formula, which is independent of the name given the parameter in its resource declaration.",22090-paramNameIsNotVarName-instance.xml,pass,,
,,V-03,"Based on V-02, tests that the parameter resource of the variable-set arc can be in a separate file which has just parameter resource(s).  A link:loc is used to ""discover"" the other linkbase file and retrieve the resource by an id.  The label on the parameter in the other file is set to ""dummy"" to demonstrate that its id, not its label, is used by the loc to find it.",22090-paramInAnotherFile-instance.xml,pass,,
,,V-04,"Based on V-01, tests that a variable-set arcs and resources can be separated to independent extended links, each of its own role name, all in the same linkbase file.",22090-separateExtLinks-instance.xml,pass,,
,,V-05,"Based on V-04, tests that a discovering loc can get variable-set arcs from a separate linkbase file of just arcs (discovered by just a loc in the linkbaseRef'ed linkbase file), 
and resources can be separated to another loc-discovered file of just resources.  So the discovery order is that the instance, 22090-separateLbFiles-instance.xml, linkbaseRef's to 22090-separateLbFiles-formula-loc.xml, which has only a discovery-causing loc (per XBRL 2.1 section 3.2), that discovers the linkbase file 22090-separateLbFiles-formula-arcs.xml, that has all of the arcs from V-04 above, each of which has a locs to its resources causing discovery of 22090-separateLbFiles-formula-resources.xml, which has the resources for these arcs.",22090-separateLbFiles-instance.xml,pass,,
,22140 Preconditions.xml
,,V-01,"Tests that a precondition which is met produces the output fact variable.  In this case, a sequence of (eight) planets is checked for all eight being present.  They are and an output fact is produced.",22140-allPlanets-instance.xml,pass,,
,,V-02,Tests that a precondition which is not met prevents the output fact variable.  As above but count is one short.  Result instance has no fact items.,22140-missingMars-instance.xml,pass,,
,,V-03,Tests that a precondition which has an expression that has no effective boolean value (according to XPath2 spec).  Result is not produced.,22140-not-effectiveBooleanTest-instance.xml,pass,err:FORG0006,err:FORG0006
,,V-04,Same as V-01 but checks that xbrli:xbrl/xbrli:context node count is 1,22140-contextNodeIsXbrl-instance.xml,pass,,
,22160 Evaluation.xml
,,V-01,"Tests that with no variables and a precondition which is met, the variable set is deemed to have evaluated, which causes the formula to produce a single fact item.",22160-noVarsTruePrecond-instance.xml,pass,,
,,V-02,"Tests that with no variables and a precondition which is not met prevents the the variable set from deemed to be evaluated, which prevents output of a fact variable.",22160-noVarsFalsePrecond-instance.xml,pass,,
,,V-03,Tests that with no variables and no precondition the variable set is deemed to be evaluated and a fact item is generated.,22160-noVarsNoPrecond-instance.xml,pass,,
,22170 Bind As Sequence.xml
,,V-01,"Tests that a sequence has no duplicate values (by v-equals criteria, not by item duplicates criteria).",22170-noDups-instance.xml,pass,,
,,V-02,"Tests that a sequence has only facts of same uncovered aspect values.  The input planets are grouped by identifier to inner, home, and outer planets.  A non-covering identifier filter tries to sneak all planets into same collection, but should fail to do so.  Result should have 3 sequences by entity identifier aspect segregation.",22170-sameUncoveredAspects-instance.xml,pass,,
,,V-04,"Same as 22040 V-02, but $c1 matches only c1 facts that are implicity matched to eg:c2, which lists only the single root-level c1 (mercury) for hello result.",22170-seq-impl-filt-factsInInst-instance.xml,pass,,
,,V-06,"$v binds to sequence of items without implicit filtering.  Because of no implicit filtering, the sequence ""receives"" all the items in facts-in-instance of all locations.  In this variation v fact items are sub-grouped into 3 tuples. Since location is uncovered, the processing for spec 4.1 bullet 3 separates these three tuple groupings into separate evaluations.  Thus three fact items are output",22170-seq-uncovered-aspect-factsInInst-instance.xml,pass,,
,,V-07,"Same as v-06 above, but evaluation of the sequence groups evaluations by both location and concept name (both uncovered).",22170-seq-uncovered-2-aspects-factsInInst-instance.xml,pass,,
,,V-08,"Same as v-07 above, but evaluation of the sequence groups evaluations by location (uncovered), not concept name (covered).",22170-seq-uncovered-covered-aspects-factsInInst-instance.xml,pass,,
,,V-09,"Same as v-07 above, but evaluation of the sequence groups evaluations by dimension (uncovered).",22170-seq-uncovered-dim-aspects-factsInInst-instance.xml,pass,,
,,V-10,"Same as V-06 but numeric values added to sequence, so they should be unit-sub-filtered by implicit segregating.",22170-seq-uncovered-aspect-3-factsInInst-instance.xml,pass,,
,,V-10a,"Same as V-10, original version, attempted string-join on integer arguments, should raise XPath wrong argument type error (XPTY0004)",22170-seq-uncovered-aspect-3a-factsInInst-instance.xml,pass,xqt-err:XPTY0004,err:XPTY0004
,,V-11,"Inspired by a COREP test by Victor Morilla, checks that all implicitly-matching concepts (same uncovered aspects) are all duplicates of each other.  (Similar test is in 33210 assertion tests, but there with assertion.)",22170-seq-dupTest-1-instance.xml,pass,,
,,V-12,"Same as v-11 but not implicit filtering; still the sequence should be sub-grouped by uncovered aspects and have same effect as v-11.  Aspects hand-constructed because of no implicit filtering, $v can't be a source.",22170-seq-dupTest-2-instance.xml,pass,,
,,V-13,"Same as v-11 but instead of testing that every concept is duplicate, tests that there is just some duplicate in the sequence.",22170-seq-dupTest-3-instance.xml,pass,,
,,V-14,"Based on a COREP example by Victor Morilla.  Determines the aggregate total for all facts whose concepts aggregate by an explicit dimension, single fact variable, single bind as sequence, just dimension is covered.  Sequence of facts should have two evaluations, one for planetary natural moons and the other for planetary manufactured satellites, producing two aggregate sums (natural and manufactured).",22170-seq-aggregationTest-1-instance.xml,pass,,
,,V-15,Same as V-14 but uses typed dimension to be sure s-equal checks of typed dimension aspects work for subpartitioning.,22170-seq-aggregationTest-2-instance.xml,pass,,
,,V-16,"Tests that a sequence has allows duplicate values (by item duplicates criteria).  Three tuples each have multiple p-equal, c-equal, u-equal items (even though they are not v-equal).  @duplicates=""true"" to allow the sequences to hold item duplicates.",22170-seq-item-duplicates-true-instance.xml,pass,,
,,V-17,"Tests that a sequence is sub-partitioned when not allowing duplicate values (by item duplicates criteria).  Three tuples each have multiple p-equal, c-equal, u-equal items (even though they are not v-equal).  @duplicates=""false"" to force each evaluation to have no item duplicates (p-,c-,u-equality).  Does not consider v-equality for item duplicaes (see 2.1 spec).",22170-seq-item-duplicates-false-instance.xml,pass,,
,,V-18,"Same as v-17 but duplicates attribute is absent, so duplicates=false is assumed.",22170-seq-item-duplicates-unspecified-instance.xml,pass,,
,,V-19,"Issue is that of v-17 but generalVariable, not factVariable, binds as sequence, no sub-partitioning or removal of duplicates.",22170-generalVar-dupSeq-instance.xml,pass,,
,,V-20,"Issue is that of v-17 but generalVariable, not factVariable, binds as sequence, sequence is empty and binds correctly.",22170-generalVar-emptySeq-instance.xml,pass,,
,,V-20a,"Issue is that of v-20 but factVariable, binds as sequence, sequence is empty and does not bind, because no fallback value is provided.",22170-noEmptyEvals-instance.xml,pass,,
,,V-21,"Issue is that of v-17 but generalVariable, not factVariable, binds as sequence, sequence contains five repeats of qname and string objects, e.g., (QName, string, integer, QName, string, integer, QName, string, integer, QName, string, integer, QName, string, integer).  The integers in the sequence are multiplied by 10 to ensure they were typed as integers and can be treated numerically, the qnames and strings just rendered.",22170-generalVar-dupMixSeq-instance.xml,pass,,
,,V-22,Tests that a fact variable sequence has no nil values when nils attribute is absent.,22170-noFvNils-instance.xml,pass,,
,,V-23,"Tests that a fact variable sequence has nil values when nils=""true"" requests them.",22170-withFvNils-instance.xml,pass,,
,,V-24,Tests that a general variable sequence has no nil values.,22170-withGvNils-instance.xml,pass,,
,,V-25,Same as V-22 but tests that a fact variable sub-sequence partitioned by uncovered aspect has no nil values when nils attribute is absent.,22170-noFvNils-uncoveredAspect-instance.xml,pass,,
,,V-26,"Same as V-25 but nils requested by nils=""true"".",22170-withFvNils-uncoveredAspect-instance.xml,pass,,
,,V-27,"Three dimensional aspects all in segment showing partitioning by each dimensional aspect, one fact duplicated twice, other three times, string-join for result value shows the duplication",22170-3dims-1-instance.xml,pass,,
,,V-28,"Same as V-27 but without matches=true, the duplicates are not string-joined in result",22170-3dims-2-instance.xml,pass,,
,,V-29,Same as V-27 but the duplicates have dimensions scattered randomly between segment and scenario,22170-3dims-3-instance.xml,pass,,
,,V-30,Same as V-27 but the duplicates have dimensions scattered randomly between segment and scenario and Dim3Mem1 is a default,22170-3dims-4-instance.xml,pass,,
,,V-31,"Same as V-29 but aspectModel is non-dimensional, one pair of contexts has dimension aspects in different order (which should be s-equals different), others have v-29 (seg/scen scatterings) which also should be s-equals different",22170-3dims-5-instance.xml,pass,,
,22180 Bind To Empty Sequence.xml
,,V-01,Tests that variable can bind to an empty sequence.  Fallback value is () so empty sequence results when the source fails to bind.,22180-empty-no-fallback-instance.xml,pass,,
,,V-02,"Tests that variable can bind to an empty sequence but a fact is bound to, so that the found sequence is the count of bound sequence which is 1.",22180-nonempty-no-fallback-instance.xml,pass,,
,,V-03,"Tests that variable can bind to an empty sequence, and if so, with fallback specified, returns the fallback value.  Fallback value is just an integer here.",22180-empty-with-fallback-instance.xml,pass,,
,,V-04,Tests that fallback value expression of fact variable cannot reference general variable.,22180-empty-with-fallback-2-formula.xml,pass,xbrlve:fallbackValueVariableReferenceNotAllowed,xbrlve:fallbackValueVariableReferenceNotAllowed
,,V-05,"Tests that variable can bind to an empty sequence, and if so, with fallback specified, returns the fallback value.  Fallback value is just a sequence of integers, (no longer processed one by one, despite bindAsSequence is false).",22180-empty-with-fallback-3-instance.xml,pass,,
,,V-06,"Tests that variable can bind to an empty sequence, and if so, with fallback specified, returns the fallback value.  Fallback value is just a sequence of integers, processed as a sequence (no longer dependent on bindAsSequence being true).",22180-empty-with-fallback-4-instance.xml,pass,,
,,V-07,"Tests that variable can bind to an empty sequence, and if so, with fallback specified, returns the fallback value.  Fallback value is just a sequence of integers, processed as a sequence (even though bindAsSequence is false).  Reflects wiki and conf call resolution for fallback value to only produce a single result, no iteration, in this circumstance.",22180-empty-with-fallback-5-instance.xml,pass,,
,,V-08,"Tests that variable can bind to an empty sequence, and if so, with fallback specified, returns the fallback value. Parameters are in scope for the fallback value.",22180-empty-with-fallback-6-instance.xml,pass,,
,,V-09,Tests that fallback value expression of fact variable cannot reference fact variable.,22180-empty-with-fallback-7-formula.xml,pass,xbrlve:fallbackValueVariableReferenceNotAllowed,xbrlve:fallbackValueVariableReferenceNotAllowed
,,V-10,"Three numeric variables each can bind to number when absent, different combinations of absent missing facts show dynamic evaluation ordering of the binding process to produce results.  If only static evaluation ordering is used then there will be missing results.  There are no inter-dependencies between the fact variables.",22180-absent-facts-1-instance.xml,pass,,
,,V-11,"Same as V-10 but an interdependency is introduced by general filter, so that $n2 depends on $n1 not being fallen-back. Dynamic fact variable ordering is required respond to fallen-back-variable dependencies, and in turn to produce expected evaluations.",22180-absent-facts-2-instance.xml,pass,,
,,V-12,"Same as V-10 but a variable (general) is introduced with a dependency on the fallen back variables, which requires dynamic ordering of evaluation so that not only is the binding order (for uncovered bound variables) dynamic, but the dependent (general) variable must evaluate after the dynamic order of preceeding bound or fallen back variables.",22180-absent-facts-3-instance.xml,pass,,
,,V-13,"$n1, $n2, and $n3 each have fallback values and no dependency.  $n4 depends on one of $n1, $n2, or $n3 existing, or if none, grabs fact n4, and if none falls back. Also $n5 has a fallback and no dependency.  General variable $g1 adds up $n1, $n2, $n3, $n4, and $n5.  So it will evaluate if any of $n1 thru $n5 evaluate, but $n4 must evaluate after $n1, $n2, and $n3.  Even if $n4 binds empty, if $n5 is present $g1 evaluates.  The instance has a comment for each context of implicitly binding variables to show how the result is achieved.",22180-absent-facts-4-instance.xml,fail,,formula:resultFactCounts
,,V-14,Same as V-10 but a context has no fact items and that fact-less context should not result in an evaluation with all fact variables getting fallen back values.,22180-absent-facts-5-instance.xml,pass,,
,,V-15,"$a: filters concept A
   (concept aspect is covered)
  $b: filters concept B
   (concept aspect is covered)
   (Falls back to zero)
  $c: filters concept C 
   (concept and period aspects are covered)
   (period filter matches to previous year to $b period or if $b has fallen back, matches to 2008)
Target instance 1: 
A 2008,
 B 2008,
 C 2007",22180-wiki-case-3-1-instance.xml,pass,,
,,V-16,"Same as V-15 but
Target instance 1: 
A 2008,
 B 2007,
 C 2008",22180-wiki-case-3-2-instance.xml,pass,,
,,V-17,"Same as V-15 but
 $a: filters concept A
Target instance 3: 
A 2008,
 B 2008,
 C 2008,
 C 2007",22180-wiki-case-3-3-instance.xml,fail,,formula:resultFactCounts
,,V-18,"$a: fallbackValue = 0
    Concept filter: A (cover = true)
 $b: 
     Concept filter: B (cover = true)
    Period filter: if $a != 0 then period = period($a) - 1 else 2008 (cover = true)

Target instance 1: 
  Concept A, year 2008
  Concept B, year 2007
  Concept B, year 2008

Expectations discussion:

""$a = A / 2008 ,  $b = B / 2007"" is a valid evaluation. Clear
""$a = 0 , $b = B / 2007 is not valid"" (the fallback value must not be considered as A / 2008 is valid). Clear
But, is ""$a = 0 , $b = concept B / year 2008"" to be considered a valid evaluation???

08/08/08: Update on wiki page, the questionable 2nd evaluation is no longer an evaluation, and its result is commented out in the results file.

Aspects for output are taken from n2, on assumption that formula:uncovered, which is used in example 3, won't be able to produce an aspect for period when n1 missing.",22180-wiki-case-4-1-instance.xml,fail,,formula:resultFactCounts
,,V-19,"Same as v-18 but formula:uncovered for output aspects.  Only n1 has period uncovered, so when it is missing, then its fallback value is atomic only, with no aspects.  That forces the xbrlfe:undefinedSAV error to be raised on second evaluation, so only one output and in the case of the other, an error results.

08/08/08: Update on wiki page, the questionable 2nd evaluation is no longer an evaluation, and its result is commented out in the results file.  Because the 2nd evaluation does not occur there is no error raised any longer.",22180-wiki-case-4-2-instance.xml,fail,,xbrlfe:undefinedSAV
,,V-20,"Tests that when there is just one fact variable with a fallbackValue, it can never fall back because that would violate the second bullet in the bullet-list in section 4 of variables spec (can't have an evaluation when all factVariables fall back).  Done as an assertion so there is no dependency on aspect values of the single factVariable, were it to be bound to an atomic-only non-node value.",22180-empty-only-one-fallback-instance.xml,pass,"{'assertion': (0, 0)}","{'assertion': (0, 0)}"
,,V-21,"Test case binds one-by-one to tuples that may have two child variables.  Sums the children or their fallback values.  Inspired by a real world example of address tuples where various address details are optional depending on country.  (HF: I didn't try to have both child variables fall back, as I'm not sure that case would be valid.)  Implicit filtering is disabled so there is no attempt to match the tuple's absent aspects to the item facts.",22180-fallback-in-tuple-instance.xml,pass,,
,,V-31,Tests dynamic binding order needed to assure evaluation when different fact variables are absent.  Highlights dynamic behavior of implicit filtering when some variables that are absent take their fallback values but still asure evaluation with those variables present for the evaluation.  String valued fallback to empty string. Contributed by Victor Morilla.,22180-implFilter-cases/case1-input.xml,pass,,
,,V-32,As V-31 but fall back value is to empty sequence.,22180-implFilter-cases/case2-input.xml,pass,,
,,V-33,As V-31 but values are monetary.,22180-implFilter-cases/case1b-input.xml,pass,,
,,V-34,As V-32 but values are monetary.,22180-implFilter-cases/case2b-input.xml,pass,,
,,V-41,"Test suggested by Victor, factvar3 depends on genvar2 depends on factvar1, both factvars have fallback, all facts exist, expect a binding and result.  Fv1 must bind to instance variable, or fall back, gv2 depends on fv1 but produces concept local name of fv3's filter, and assertion expects fv3 to have the result from instance and not from fall back.  This variation has all facts binding.",22180-fv-gv-fv-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-42,"In this variation, fv1 falls back, gv2 anyway produces name of fv3 concept, fv3 is present and binds, assertion fires and is true.",22180-fv-gv-fv-instance2.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-43,"In this variation, fv1 falls back, gv2 anyway produces name of fv3 concept, fv3 is missing there should be no evaluation because all facts falling back.  If processor incorrectly allows evaluation because the general variable can bind, then there would be an assertion not satisfied.",22180-fv-gv-fv-instance3.xml,pass,"{'assertion': (0, 0)}","{'assertion': (0, 0)}"
,,V-51,"Primary items share dimensions, but one is from a different linkrole, tests that fallback values don't leak between link roles (even when sharing hypercubes of different dimensionality).  Also an accountant would not want unreported dimensions to be assumed by phantom new fallback values.
(Patterned after the formula for finacial liabilities associated with transferred financial assets, total carrying amount, original assets, available for sale, in one linkrole, equal to the sum of same named items with additional dimensions of equity instruments, debt instruments, and loans and advances.)",finrep/22180-finrepFallback-test1-instance1.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,,V-52,"Same as V-51, but one of the 2-dim primary items is absent.",finrep/22180-finrepFallback-test1-instance2.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,,V-53,"Same as V-51, but the 1-dim primary item is absent.",finrep/22180-finrepFallback-test1-instance3.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,,V-54,"Same as V-53, but the first dimension common to all contexts is the default dimension which does not match any filter.  All variables might fall back but should not produce an evaluation.",finrep/22180-finrepFallback-test1-instance4.xml,pass,"{'existence-assertion': (0, 1), 'value-assertion': (0, 0)}","{'existence-assertion': (0, 1), 'value-assertion': (0, 0)}"
,,V-55,"Same as V-51 but first dimension takes the default member value.  This could exist in the real world if one captured for total portfolio (vs. available for sale) finacial liabilities associated with transferred financial assets, total carrying amount, original assets.",finrep/22180-finrepFallback-test2-instance1.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,,V-56,"Same as V-52, but with a default dimension.",finrep/22180-finrepFallback-test2-instance2.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,,V-57,"Same as V-53, but with a default dimension",finrep/22180-finrepFallback-test2-instance3.xml,pass,"{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}","{'existence-assertion': (1, 0), 'value-assertion': (1, 0)}"
,23020 AspectTests TypedDimension.xml
,,V-01,Typed dimension has elements that match with default aspect tests,23020-defaultTest-elts-01-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-02,"Typed dimension has elements that match with default aspect tests, two matches",23020-defaultTest-elts-02-instance.xml,pass,"{'assertion': (2, 0)}","{'assertion': (2, 0)}"
,,V-03,Typed dimension has elements that match with default aspect tests but order different,23020-defaultTest-elts-03-instance.xml,pass,"{'assertion': (0, 0)}","{'assertion': (0, 0)}"
,,V-03a,Typed dimension has elements that match with custom aspect tests for different order elements,23020-defaultTest-elts-03a-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-04,Typed dimension has attributes that match with default aspect tests but order different,23020-defaultTest-attrs-01-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-50,Typed dimension has elements that match with custom aspect tests for reversed string comparison,23020-customTest-reverseString-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-51,Typed dimension has elements that match with custom aspect tests for date union comparison,23020-customTest-dateUnion-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-52,Two custom equality tests are provided for same domain,23020-customTest-multiple-01-instance.xml,pass,xbrlve:multipleTypedDimensionEqualityDefinitions,xbrlve:multipleTypedDimensionEqualityDefinitions
,23030 AspectTests DefaultDimension.xml
,,V-01,"This case is used to attest that the formula processor must succeed to bind the fact when its associated variable has a concept filter and an explicit dimension filter with its default member, and when this concept is not linked to  any hypercube containing this dimension in the taxonomy.
(Contributed by Haizhen Li, Bank of France, 2012-04-13, by e-mail of same date to Formula WG)",23030-v01-instance.xml,pass,"{'assertion': (1, 0)}","xmlSchema:elementUnexpected {'assertion': (1, 0)}"
,23040-VariableStaticAnalysis-prohibitedNamespaceUsedForCustomFunction.xml
,,V-01,The custom function uses http://www.xbrl.org/2008/function/instance as its namespace.,23040-prohibitedNamespace-concepts.xsd,pass,xbrlve:noProhibitedNamespaceForCustomFunction,xbrlve:noProhibitedNamespaceForCustomFunction
,31110 Consistency Assertion Radius Conflict.xml
,,V-01,Acceptance radius conflict example.  (Valid cases in 32210 test cases directory.),31110-radiusConflict-instance.xml,pass,xbrlcae:acceptanceRadiusConflict,xbrlcae:acceptanceRadiusConflict
,31130 Consistency Assertion Variables Not Allowed.xml
,,V-01,Superfluous disallowed fact variable related to the consistency assertion.  (Valid cases in 32210 test cases directory.),31130-disallowedFactVariable-instance.xml,pass,xbrlcae:variablesNotAllowed,xbrlcae:variablesNotAllowed
,,V-02,Superfluous disallowed general variable related to the consistency assertion.  (Valid cases in 32210 test cases directory.),31130-disallowedGeneralVariable-instance.xml,pass,xbrlcae:variablesNotAllowed,xbrlcae:variablesNotAllowed
,31140 Consistency Assertion Missing Formulae.xml
,,V-01,"Missing formulae example.  (Valid cases from directory 32210 test cases has been modified by commenting-out the relationship to the formula, and also commenting out the formula and its relationships to prevent anything from being evaluated.)  Since formula doesn't fire there are no fact items in results file, and no occurences of assertions to count.",31140-missingFormulae-instance.xml,pass,"{'assertion': (0, 0)}",
,31210 Consistency Assertion Processing.xml
,,V-01,Consistency check valid a = b * c.  Evaluates consistently.,31210-strict-abc-evaluated-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-02,Consistency check invalid a against b * c.  Evaluates inconsistent.,31210-strict-abc-inconsistent-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-03,Consistency check valid a = b * c.  Evaluates consistently.,31210-not-strict-abc-evaluated-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-04,"Consistency check valid a = b * c, a not reported.  Consistency is not evaluated because no eg:a values in source instance.",31210-not-strict-bc-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-05,"Consistency check valid a = b * c, a unreported.  Evaluation must be inconsistent due to unreported a fact item.",31210-strict-bc-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-06,"Consistency check valid a = b * c, using absolute acceptance radius, at low end of tolerance range.",31210-abs-low-ok-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-07,"Consistency check valid a = b * c, using absolute acceptance radius, at high end of tolerance range.",31210-abs-high-ok-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-08,"Consistency check valid a = b * c, using absolute acceptance radius, below low end of tolerance range.",31210-abs-low-not-ok-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-09,"Consistency check valid a = b * c, using absolute acceptance radius, above high end of tolerance range.",31210-abs-high-not-ok-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-10,"Consistency check valid a = b * c, using proportionate acceptance radius, at low end of tolerance range.",31210-param-ok-low-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-11,"Consistency check valid a = b * c, using proportionate acceptance radius, at high end of tolerance range.",31210-param-ok-high-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-12,"Consistency check valid a = b * c, using proportionate acceptance radius, below low end of tolerance range.",31210-param-not-ok-low-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-13,"Consistency check valid a = b * c, using proportionate acceptance radius, above high end of tolerance range.",31210-param-not-ok-high-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-14,"Consistency check valid a = b * c, using proportionate acceptance radius, at low end of tolerance range.",31210-propor-ok-low-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-15,"Consistency check valid a = b * c, using proportionate acceptance radius, at high end of tolerance range.",31210-propor-ok-high-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-16,"Consistency check valid a = b * c, using proportionate acceptance radius, below low end of tolerance range.",31210-propor-not-ok-low-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-17,"Consistency check valid a = b * c, using proportionate acceptance radius, above high end of tolerance range.",31210-propor-not-ok-high-instance.xml,pass,"{'assertion': (0, 2)}",
,31220 Consistency Assertion Nil Processing.xml
,,V-01,"Per name.  Consistence-assertion spec Example 5 row 1, derived fact a does not exist in the input instance.",31220-not-strict-nil-not-evaluated-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-02,"Per name.  The reported facts eg:a with nil values are not in the ""assertion data set"", so
       therefore this example behaves as if there were no aspect-matched input facts (in the assertion
       data set), and thus also corresponds to Example 5 row 1.  (This is a revision, because in the 
       original version of this variation the nuance, that the reported nil eg:a's are not considered
       to be in the assertion data set, was missed and the original version's count satisfied was wrong.)",31220-not-strict-nil-evaluated-ok-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-03,Per name.   Consistence-assertion spec Example 5 row 3.,31220-not-strict-nil-evaluated-not-ok-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-04,"Similar to V-02.  The reported facts eg:a with nil values are not in the ""assertion data set"", so
       therefore this example behaves as if there were no aspect-matched input facts (in the assertion
       data set), and thus also corresponds to Example 5 row 2.  (This is a revision, for the same reason
       as V-02.)",31220-not-strict-not-nil-evaluated-not-ok-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-05,"Per name.  The reported facts eg:a with nil values are not in the ""assertion data set"", so
       therefore this example behaves as if there were no aspect-matched input facts (in the assertion
       data set), and thus corresponds to Example 5 row 4.",31220-strict-nil-evaluated-ok-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-06,"Per name.  Consistence-assertion spec Example 5 row 4, similar to V-05, but in this case the
       eg:a facts are absent from the input instance (whereas in V-05 the eg:a's were present but had
       nil values).",31220-strict-nil-nonnil-evaluated-ok-instance.xml,pass,"{'assertion': (2, 0)}",
,,V-07,"Per name.  (Not in table 5 or spec, assumes facts to be x-unequal if one is nil and the other is not nil.)",31220-strict-nil-evaluated-not-ok-instance.xml,pass,"{'assertion': (0, 2)}",
,,V-08,Per name.  Consistence-assertion spec Example 5 row 5.,31220-strict-nil-missing-evaluated-not-ok-instance.xml,pass,"{'assertion': (0, 2)}",
,31230 Consistency Assertion Processing.xml
,,V-01,"Consistency check string, any radius is ignored per example.",31230-str-eq-str-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-02,"Consistency check string, any radius is ignored per example.",31230-str-ne-str-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-03,"Consistency check inf numbers, no radius per example.",31230-inf-eq-inf-no-radius-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-04,"Consistency check inf numbers, no radius per example.",31230-inf-ne-inf-no-radius-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-05,"Consistency check derived fact defaults precision 0, no radius per example. In this case precision can be inferred from the source fact, the derived fact's precision is not explicitly specified in the formula construct, so it defaults to precision zero.  In this case the assertion set is not defined and no assertionoccurs.",31230-def-p0-ne-inf-no-radius-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-06,"Consistency check derived fact specifies precision 0, no radius per example. In this case the derived fact's precision zero is explicitly specified in the formula construct precision expression.  In this case the assertion set is not defined and no assertionoccurs.",31230-p0-ne-inf-no-radius-instance.xml,pass,"{'assertion': (0, 0)}",
,,V-07,"Consistency check derived fact specifies precision 2, note that there is no inferred precision from the source fact, derived fact's precision must be explicitly specified in the formula construct precision expression, this case passes per example.",31230-p2-eq-p2-no-radius-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-08,"Consistency check derived fact specifies precision 2, corresponding fact precision 3, passes per example.",31230-p2-eq-p3-no-radius-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-09,"Consistency check derived fact specifies precision 2, corresponding fact differs at precision 3, per example.",31230-p2-ne-p3-no-radius-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-10,"Consistency check identical values any precision, radius specified, per example.",31230-inf-eq-inf-radius-0-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-11,"Consistency check where precision 0 is defaulted by precision absence in formula construct, but also radius specified, although if no radius they would pass, here the radius prevails over the precision zero, and they don't pass, per example.",31230-def-ne-inf-radius-0-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-12,"Consistency check where precision inf is specified in formula construct, but also radius specified, and they don't pass, per example.",31230-inf-ne-inf-radius-0-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-13,"Consistency check, as above, per example.",31230-high-ok-p0-radius-5-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-14,"Consistency check, outside radius range, per example.",31230-above-p0-radius-5-instance.xml,pass,"{'assertion': (0, 1)}",
,,V-15,"Consistency check, within the radius range, radius expression uses fact value as context.
      25 any precision compared to 30.000001 any precision, radius is 3 + (0.1 * fact value), assertion satisfied.
      The radius is absolute, but uses a proportion of the fact's value.",31230-dynamic-absolute-radius-instance.xml,pass,"{'assertion': (1, 0)}",
,31410 Use Cases Basic Calculation.xml
,,V-01,Consistency check valid assets against liabilities plus equity.,31410-consistentAssets-instance.xml,pass,"{'assertion': (1, 0)}",
,,V-02,Consistency check invalid assets against liabilities plus equity.,31410-inconsistentAssets-instance.xml,pass,"{'assertion': (0, 1)}",
,31420 Use Case Derived Risked Capital.xml
,,V-01,"The example checks the consistency of the derived RiskedCapital given a
        proportionalRadius determined by a parameter. The RiskedCapital is
        calculated as: RiskedCapital = InvestedCapital * RiskFactor",instance.xml,pass,"{'assertion': (2, 1)}",
,31430 Use Cases Pharmaceutical.xml
,,V-01,"The example shows aggregation over the product dimension by
      use of the product dimension members tree.  For each product
      dimension, the child members are aggregated.  
      See powerpoint enclosed for further details.
      This evaluation determines a dimension filter member by the function
      xfi:fact-explicit-dimension-value of the aggregate
      variable.",Sales-instance.xml,pass,"{'assertion': (6, 0)}",
,,V-02,"The example shows aggregation over the product dimension by
      use of the product dimension members tree.  For each product
      dimension, the child members are aggregated.  
      See powerpoint enclosed for further details.
      This evaluation determines a dimension filter member by the 
      df:variable reference to the aggregate variable's dimension",Sales-instance-v02.xml,pass,"{'assertion': (6, 0)}",
,31440 Use Cases Dimensional Weighted Average.xml
,,V-01,"The weighted average of dimensional
      children are checked against the dimensional parent fact using a consistency assertion.
      See powerpoint enclosed for further details.",WgtAvg-inst.xbrl,pass,"{'assertion': (3, 0)}",
,32110 Existence Assertion Element Static Analysis .xml
,,V-01,Test references fact variable.,32110-factVarRef-instance.xml,pass,xbrleae:variableReferenceNotAllowed,xbrleae:variableReferenceNotAllowed
,32120 Existence Assertion Relationship Static Analysis.xml
,,V-01,"Test is missing any fact variables.  (An PWD version of the existence assertion specification raised an error in this situation.  The CR specification uses the definition of variable evaluation from the variables specification, in which case the variableSet evaluates once if there are no variables.  Thus this test has been modified to expect one evaluation and no error.)",32120-noVariables-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,32210 Existence Assertion Processing.xml
,,V-01,Test attribute absent evaluates consistently.,32210-noTest-1-item-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-02,"Test attribute absent evaluates correctly, no items, assertion fails.",32210-noTest-no-items-instance.xml,pass,"{'assertion': (0, 1)}","{'assertion': (0, 1)}"
,,V-03,Test = 'true()' evaluates consistently.,32210-effectiveBooleanResult-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-04,"Test = 'QName' typed atomic object can't convert to boolean value, raises XPath-defined error (or otherwise assertion fails).",32210-noEffectiveBooleanResult-instance.xml,pass,err:FORG0006,"err:FORG0006 {'assertion': (0, 0)}"
,,V-05,"Test that it is an integer equal to 5 evaluates consistently.  Assertion
      will fail if it is not xs:integer (a cardinality) or value is wrong for
      this instance.",32210-contextIsCardinality-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-06,Test that cardinality compared to parameter evaluates consistently.,32210-testParam-ok-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-07,Test that cardinality of instance does not compare to parameter.,32210-testParam-not-ok-instance.xml,pass,"{'assertion': (0, 1)}","{'assertion': (0, 1)}"
,33210 Value Assertion Processing.xml
,,V-01,Test = 'true()' evaluates consistently.,33210-effectiveBooleanResult-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-02,"Test = 'QName' typed atomic object can't convert to boolean value, raises XPath-defined error (or otherwise assertion fails).",33210-noEffectiveBooleanResult-instance.xml,pass,err:FORG0006,"err:FORG0006 {'assertion': (0, 0)}"
,,V-03,Test evaluates true.  Precision of fact items is not considered.,33210-a-eq-bc-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-04,Test evaluates false.  Precision of fact items is not considered.,33210-a-ne-bc-instance.xml,pass,"{'assertion': (0, 1)}","{'assertion': (0, 1)}"
,,V-05,Test evaluates true.  Dependency evaluation same as with formula variable-sets.,33210-a-eq-bc-gvFvParam-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-06,Test evaluates false.,33210-a-ne-bc-gvFvParam-instance.xml,pass,"{'assertion': (0, 1)}","{'assertion': (0, 1)}"
,,V-07,Test evaluates false.  Precision of fact items is not considered.,33210-a-ne-bc-precond-instance.xml,pass,"{'assertion': (0, 0)}","{'assertion': (0, 0)}"
,,V-08,"Inspired by a COREP test by Victor Morilla, checks that all implicitly-matching items (same uncovered aspects) are all duplicates of each other.  (Same as 22170 V-11 but here is an assertion instead of fact producing formula.)",33210-seq-dupTest-1-instance.xml,pass,"{'dupCheck': (1, 5)}","{'dupCheck': (1, 5)}"
,,V-09,"Same as v-11 but not implicit filtering; still the sequence should be sub-grouped by uncovered aspects and have same effect as v-11.  Aspects hand-constructed because of no implicit filtering, $v can't be a source.",33210-seq-dupTest-2-instance.xml,pass,"{'dupCheck': (1, 5)}","{'dupCheck': (1, 5)}"
,,V-13,"Same as v-11 but instead of testing that every value is duplicate, tests that there is just some duplicate value in the sequence.",33210-seq-dupTest-3-instance.xml,pass,"{'dupCheck': (2, 4)}","{'dupCheck': (2, 4)}"
,,V-14,"Same as prior but only evaluates assertion when there are items that are duplicates without regard to values (same concept, unit, context, dimension, etc).  Set so that assertion failures record only if duplicate.  Assertion does not fire (due to precondition) when item is not a duplicate.",33210-seq-dupTest-4-instance.xml,pass,"{'dupCheck': (0, 6)}","{'dupCheck': (0, 6)}"
,,V-15,"Same as prior but evaluates assertion for all sequences, thus recording successes as those without duplicates, and failures as those with duplicates.  Precondition moved to assertion test.",33210-seq-dupTest-5-instance.xml,pass,"{'dupCheck': (2, 6)}","{'dupCheck': (2, 6)}"
,34110 Multi Assertion Processing.xml
,,V-01,"Similar to Finrep testing, formula a = b + c checked for consistency, all variables must exist and be non-nil, so same fact variables and arcs are shared.  Existency assertion and formula have same label to effect arc sharing.",34110-a-eq-bcd-instance.xml,pass,"{'consistency_assertion': (1, 0), 'existence_assertion': (1, 0)}",
,,V-02,"Similar to Finrep testing, formula abs(a - b - c -d) < tolerance radius checked for consistency, allows fallbacks and be non-nil, so same fact variables and arcs are shared.  Existence assertion and formula have same label to effect arc sharing.  (Similar to V-01, but since a may also fall back, as well as b, or c, can't be done as a consistency expression because formula would not fire if a falls back.)",34110-abcd-1-instance.xml,pass,"{'value_assertion': (1, 0), 'existence_assertion': (1, 0)}","{'value_assertion': (1, 0), 'existence_assertion': (1, 0)}"
,,V-03,"Same as V-02, $a missing.",34110-abcd-2-instance.xml,pass,"{'value_assertion': (1, 0), 'existence_assertion': (1, 0)}","{'value_assertion': (1, 0), 'existence_assertion': (1, 0)}"
,,V-04,"Same as V-02, but values don't add up.",34110-abcd-3-instance.xml,pass,"{'value_assertion': (0, 1), 'existence_assertion': (1, 0)}","{'value_assertion': (0, 1), 'existence_assertion': (1, 0)}"
,,V-05,"Same as V-02, all of a, b, c, d missing.",34110-abcd-4-instance.xml,pass,"{'value_assertion': (0, 0), 'existence_assertion': (0, 1)}","{'value_assertion': (0, 0), 'existence_assertion': (0, 1)}"
,41210 Boolean And Filter Processing.xml
,,V-01,"Facts matching the and-filter must be named <eg:assets> and
      have a context with an entity identifier that is in the
      http://www.example.com/entity/identification scheme",41210-nameAndIdent-instance.xml,pass,,
,,V-02,"Facts must not be contained by a tuple and they must be reported with a period of ""forever"".",41210-parentAndPeriod-instance.xml,pass,,
,41220 Boolean Or Filter Processing.xml
,,V-01,"Facts matching the or-filter must be named <eg:c> or
      <eg:d>; this excludes fact named eg:e from participating.
      These or conditions must be covering (to prevent implicit filters
      from excluding any solution).",41220-nameOrName-instance.xml,pass,,
,41221 Boolean Filter Processing No Children.xml
,,V-01,"The ""or filter"" has no children, so it should match no facts.",41221-orFilter-instance.xml,pass,,
,,V-02,"The ""and filter"" has no children, so it should match no facts.",41221-andFilter-instance.xml,pass,,
,41230 Boolean Filter Relationships Processing.xml
,,V-01,"The tandem and filter has the and of 41210 V-01 and filters, plus
      42210 V-01 or filter.  Forms filter grouping.",41230-tandemBoolFilters-instance.xml,pass,,
,42210 ConceptFilter Processing ConceptName.xml
,,V-01,"The concept name must be ""eg:a"".",42210-conceptNameFilter-qname-instance.xml,pass,,
,,V-02,"The concept name must be either ""eg:a"" or ""eg:b"".",42210-conceptNameFilter-two-qnames-instance.xml,pass,,
,,V-03,"The concept name must be the same as the concept name of the node accessed by the XPath variable reference ""$v:v0"".",42210-conceptNameFilter-varref-qname-instance.xml,pass,,
,42220 ConceptFilter Processing ConceptPeriodType.xml
,,V-01,The fact must be reported with an instant period.,42220-conceptPeriodTypeFilter-instant-period-instance.xml,pass,,
,,V-02,The fact must be reported with a duration period.,42220-conceptPeriodTypeFilter-duration-period-instance.xml,pass,,
,42230 ConceptFilter Processing ConceptBalance.xml
,,V-01,The fact's concept must be classified as a credit balance concept.,42230-conceptBalanceFilter-credit-balance-instance.xml,pass,,
,,V-02,The fact's concept must be classified as a debit balance concept.,42230-conceptBalanceFilter-debit-balance-instance.xml,pass,,
,,V-03,The fact's concept must not be classified as a credit or debit balance concept.,42230-conceptBalanceFilter-none-balance-instance.xml,pass,,
,42240 ConceptFilter Processing ConceptCustomAttribute.xml
,,V-01,"The fact's concept must have an attribute ""eg:customString"" on it.",42240-customAttributeFilter-qname-instance.xml,pass,,
,,V-02,"The fact's concept must have an attribute ""eg:customString"" on it with string content: confidential.",42240-customAttributeFilter-qname-strval-instance.xml,pass,,
,,V-03,"The fact's concept must have an attribute ""eg:customBoolean"" on it with boolean content: false.",42240-customAttributeFilter-qnameExpression-boolval-instance.xml,pass,,
,42250 ConceptFilter Processing ConceptDataType.xml
,,V-01,"The data type of the fact's concept must be ""xbrli:monetaryItemType"".",42250-dataTypeFilter-strict-true-qname-instance.xml,pass,,
,,V-02,"The data type of the fact's concept must be a restriction of ""xbrli:pureItemType"".",42250-dataTypeFilter-strict-false-qname-instance.xml,pass,,
,,V-03,"The data type of the fact's concept must be a restriction of ""xbrli:monetaryItemType"".",42250-dataTypeFilter-strict-false-qnameExpression-instance.xml,pass,,
,42260 ConceptFilter Processing ConceptSubstitutionGroup.xml
,,V-01,The fact's concept must be the head of the substitution group for the <xbrli:item> element.,42260-conceptSubstitutionGroupFilter-strict-true-qname-item-instance.xml,pass,,
,,V-02,The fact's concept must be a member of the substitution group for the XBRL item.,42260-conceptSubstitutionGroupFilter-strict-false-qname-item-instance.xml,pass,,
,,V-03,The fact's concept must be a member of the substitution group for the XBRL tuple.,42260-conceptSubstitutionGroupFilter-strict-false-qname-tuple-instance.xml,pass,,
,,V-04,"The fact's concept must be the head of the substitution group for the element ""eg:a"".",42260-conceptSubstitutionGroupFilter-strict-true-qnameExpression-item-instance.xml,pass,,
,43130 DimensionMember Filter.xml
,,V-01,"Domain member is an irrelevant concept, not a member of dimension being filtered.
        (With Errratum 1 this is no longer an error.)",43130-sevenSummits-choicesLocation-instance.xml,pass,,
,,V-01a,"Dimension is not an explicit dimension concept, implied XPath suggests that the 
        xfi:fact-has-explicit-dimension function is called, which will raise the
        xfie:invalidExplicitDimensionQName error.",43130-sevenSummits-choicesLocation-instance2.xml,pass,xfie:invalidExplicitDimensionQName,xfie:invalidExplicitDimensionQName
,,V-01b,"There are no domain members in the specified filter member network (descendants of indonesia)
        which prior to Erratum 1 would raise the xbrldfe:invalidDomainMember error.",43130-sevenSummits-choicesLocation-instance3.xml,pass,,
,,V-02,Filter-member network has an ambiguity but dimension filter is not referencing its link role in this variation.,43130-unreferenced-ambiguity-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-03,"Filter-member network has an ambiguity which is referenced in a member descendants axis filter.  The ambiguity is introduced because there are two extended links (of role test-role) that each define the same arcs (of arcrole test-arcrole) and the hierarchy of children is reversed in the second extended link.  The first link has MemA->MemB->MemC, and the second has MemA->MemC->MemB.
        (As of erratum 1 this is no longer an error.)",43130-referenced-ambiguity-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-04,"Filter-member network ambiguity arcs are prohibited by an extension linkbase, to verify that ambiguous arcs prohibition works in the formula processor.",43130-referenced-prohibited-ambiguity-instance.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,43210 Explicit dimension Filter Processing.xml
,,V-01,"Facts missing the required dimension are reported to the
      resulting instance.  A complement explicitDimension filter
      causes selection of those facts lacking the required dimension.",43210-sevenSummits-missingLocation-instance.xml,pass,,
,,V-02,Facts must be reported with the value eg:Argentina specified for dimension eg:Location.,43210-sevenSummits-argentinaLocation-instance.xml,pass,,
,,V-02a,"Same as V-02 but a dimensionless item is introduced to the instance, 
which is always false for the dimension filter test because it has no such dimension.  (At an earlier time it was thought that a dependency on concept name filter were required to prevent causing a dimension filter suggested xpath exception, but the suggested xpath was changed to be conditional on the subject fact having the dimension, and failing otherwise.)",43210-sevenSummits-argentinaLocation-2-instance.xml,pass,,
,,V-02b,"Same as V-02a but without a conceptName filter, so the dimensionless item QuantumWave is also processed by the dimension filter, which (in prior spec version will throw xfie:invalidDimensionForFact) now will politely ignore the non-dimensioned fact item, when trying the dimension filter on the QuantumWave object (due to implied use of xfi:fact-explicit-dimension-value function).",43210-sevenSummits-argentinaLocation-3-instance.xml,pass,,
,,V-02c,Facts must be reported with the defaulted value eg:Antarctica specified for dimension eg:Location.,43210-sevenSummits-defaultLocation-instance.xml,pass,,
,,V-03,Facts must be reported with either eg:Argentina or eg:Indonesia as the value specified for dimension eg:Location.,43210-sevenSummits-choicesLocation-instance.xml,pass,,
,,V-04,"A Place concept, with Location dimension, provides dimension-by-variable matching to select the Peak concepts to be reported.  Implicit filtering is off to prevent implicit filtering from noticing that height dimension not present on place concept.",43210-sevenSummits-variableLocation-instance.xml,pass,,
,,V-04a,Same as V-04,43210-sevenSummits-variableLocation-instance-a.xml,pass,,
,,V-05,"A Place concept, with Location dimension, provides dimension-by-variable matching to select the Peak concepts to be reported.  Implicit filtering is on which prevents peak, because it has height dimension, from binding with place, which lacks height dimension, so no result occurs.",43210-sevenSummits-variableLocation-impl-filtering-instance.xml,pass,,
,43230 Dimension Member Filter Processing.xml
,,V-01,"Facts missing the required dimension are reported to the
      resulting instance.  A complement dimensionMember filter
      causes selection of those facts lacking the required dimension.
      There is no member element.  
      The linkrole is that of the has-hypercube ""all"" arc (.../primaryItems, 
      vs. .../primaryItems2, e.g., that which
      includes the missing dimension that is present on other item
      contexts), and
      that the DRS from that arc includes all dimension-members to be
      considered for this function.",43230-sevenSummits-missingLocation-instance.xml,pass,,
,,V-02,"Facts must report a value for the eg:Location that is one of the domain members with an immediate (child) member relationship from the domain member eg:Melanesia.  Linkrole is that of the has hypercube ""all"" arc.",43230-sevenSummits-melanesiaChild-instance.xml,pass,,
,,V-03,"Facts must report a value for the eg:Location that is one of the domain members with an immediate (child-or-self) member relationship from the domain member eg:Melanesia.  Linkrole is that of the has-hypercube ""all"" arc.",43230-sevenSummits-melanesiaChildOrSelf-instance.xml,pass,,
,,V-04,"Facts must report a value for the eg:Location that is one of the domain members with a descendant of member relationship from the domain member eg:Oceania.  The linkrole indicated is that of has-hypercube ""all"" arc.",43230-sevenSummits-oceaniaDescendant-instance.xml,pass,,
,,V-05,"Facts must report a value for the eg:Location that is one of the domain members with a descendant of, or the specified member itself, of the relationship from the domain member eg:Indonesia.  The linkrole indicated is that of the has-hypercube ""all"" arc.",43230-sevenSummits-indonesiaDescendantOrSelf-instance.xml,pass,,
,,V-06,"Fact item n1 has a context with one dimension (dim2 member dim2Mem1) which can either be link role 1dimRole, or be linkrole 2dimRole where dim1 takes its default member.  In this variation the dimension filter for n1 filters based on link role 1dimRole and a single dimension.  As with the finrep production case, it can't by itself reject the multidimensioned link role because implicit matching will carry the dim1 aspect to this fact variable and mess things up.  Therefore a hard-to-explain complement filter, marked with comment 'really awful' in formula linkbase, is needed to block the other link role's dimension from ""leaking"" in here.  Without it you will also get results 70000, 80000, and 90000. (I hope the linkrole can be added to the dimension aspects in implicit filtering as proposed on wiki page on 13/08/08.)  (Follows Base Spec WG decision to allow this situation due to legacy.)",43230-finrepAmbiguity-test1-instance1.xml,pass,,
,,V-07,"Same as V-06 but in this variation the dimension filter for n1 filters based on link role 2dimRole and two dimension, where dim1 takes the default value dim1Total. (Continues the really awful problem of V-06.)",43230-finrepAmbiguity-test1-instance2.xml,pass,,
,43240 Typed dimension Filter Processing.xml
,,V-01,"Facts missing the required dimension are reported to the
      resulting instance.  A complement typedDimension filter
      causes selection of those facts lacking the required dimension.",43240-sevenSummits-missingHeight-instance.xml,pass,,
,,V-02,Facts must be reported with the value eg:peakHeight > 6000.,43240-sevenSummits-minimumHeight-instance.xml,pass,,
,44210 EntityFilter Processing EntityIdentifier.xml
,,V-01,The fact's entity identification value must have exactly 8 characters.,44210-entityIdentifier-value-string-length-instance.xml,pass,,
,44220 EntityFilter Processing SpecificScheme.xml
,,V-01,"The fact's entity identification scheme must be ""http://xbrl.org/entity/identification/scheme"".",44220-specificScheme-specified-value-instance.xml,pass,,
,,V-02,"The fact's entity identification scheme must be equal to the entity identification scheme of the fact that the variable ""v:vo"" has evaluated to.",44220-specificScheme-specified-variable-instance.xml,pass,,
,44230 EntityFilter Processing RegexpScheme.xml
,,V-01,"The fact's entity identification scheme must start with the string ""http"" and then be followed by at least one character.",44230-regexpScheme-startsWith-instance.xml,pass,,
,44240 EntityFilter Processing SpecificIdentifier.xml
,,V-01,"The fact's entity identification scheme must be ""http://xbrl.org/entity/identification/scheme"", and its entity identification value must be ""12345"".",44240-specificIdentifier-specified-value-instance.xml,pass,,
,44250 EntityFilter Processing RegexpIdentifier.xml
,,V-01,The fact's entity identification value must start with a string of 4 lower case letters in the range a-z followed by a hyphen and then 4 digits in the range 0-9.,44250-regexpIdentifier-startsWith-followedBy-instance.xml,pass,,
,45210 General Filter Processing.xml
,,V-01,The fact must have a custom attribute called <eg:custom> with a value of confidential.  Only facts matching this are processed for this example.  (Note that the result does not include the source custom attribute on the resulting fact item.),45210-custAttrValue-instance.xml,pass,,
,,V-02,The fact must be reported with an instant or a duration end date that is less than the value of the <eg:restatementDate> element in the fact's scenario.,45210-restatementFilter-instance.xml,pass,,
,,V-03,String text filter testing.,45210-textValueTest-instance.xml,pass,,
,,V-04,"There are facts that are numeric, decimal, and QName.  A general variable filter for
      the QName or string fact would generate the XPTY0004 error if attempting the
      numeric general filter test on it.  The test is only expected to be performed for
      those items passing any concept filter(s).
Note:  type safe coding is used in general filter because there currently are no filter interdependencies defined.",45210-mixedValues-1-instance.xml,pass,,
,,V-05,"There are facts that are numeric, decimal, and QName.  A general variable filter for
      the numeric or string fact would generate the XPTY0004 error if attempting the
      QName general filter test on it.  The test is only expected to be performed for
      those items passing any concept filter(s).
Note:  type safe coding is used in general filter because there currently are no filter interdependencies defined.",45210-mixedValues-2-instance.xml,pass,,
,,V-06,"There are facts that are numeric, decimal, and QName.  A general variable filter for
      the numeric or string fact would generate the XPTY0004 error if attempting the
      QName general filter test on it.  The test is is performed for a name-filtered 
      decimal concept,
      thus raising the error.
Note:  type safe coding is NOT used in general filter thus causing the error irrespective of any concept name filtering.",45210-mixedValues-3-instance.xml,pass,err:XPTY0004,err:XPTY0004
,,V-07,"There are facts that are numeric, decimal, and QName.  A general variable filter for
      the numeric or string fact would generate the XPTY0004 error if attempting the
      QName general filter test on it.  The test is is performed for all fact items
      as there is no concept filter, thus raising the error (on the non-eg:q items).
Note:  type safe coding is NOT used in general filter thus causing the error irrespective of any concept name filtering.",45210-mixedValues-4-instance.xml,pass,err:XPTY0004,err:XPTY0004
,46210 NonDimensional ImplicitFilter Processing.xml
,,V-01,"Match source is the first c:f of instance document, only concept
       aspect is uncovered, 3rd fact var must seek uncovered concept of
       first fact variable.",46210-conceptUncovered-instance.xml,pass,,
,,V-02,"Match source is the c:z of instance document, only tuple
       aspect is uncovered, 3rd fact var must seek uncovered tuple aspect of
       first (c:z) fact variable.",46210-tupleUncovered-instance.xml,pass,,
,,V-02a,"This represents a prior attempt to bind fv3 to c:f (6001) as well as c:t, which was re-authored
       as V-02b below.  However the concept period filter as originally authored would find a mismatch
       of period type for the tuple, because the tuple does have a concept aspect, and thus the period
       filter is attempted.  The period attribute does not match the test as described in the concept
       filtering spec, so the tuple is omitted from the sequence, and same result as v-02.",46210-tupleUncovered-instance2.xml,pass,,
,,V-02b,"Corrected to note that the tuple, c:t, cannot bind to fv3 because the fake-period filter will reject
       any facts not having the period aspect.  (See comments in instance document too.)
       As V-02b was originally authored, it erroneously assumed the
       tuple would pass through the period filter and try to atomize the tuple for a data value as (erroneously) thought:
       Same as V-02 but as originally authored, fv3 binds to c:f (6001) as well as c:t, causing FOTY0012 error in
       atomization of node values in preparation for arithmetic expression processing, 
       when c:t is bound to fv3, because c:t is a tuple, which not a numeric,
       because id is left off sibling c:t, causing it to be bound to fv3 in addition to desired c:f (6001).
       FOTY0012 is the error code because XPath 2, during atomization (para 2.4.2) returns FOTY0012 if the node
       does not have a typed value (tuples can't have a typed value).",46210-tupleUncovered-instance3.xml,pass,,
,,V-03,"Match source is the c:z of instance document, only entity
       aspect is uncovered, 3rd fact var must seek uncovered entity of
       first (c:z) fact variable.",46210-entityUncovered-instance.xml,pass,,
,,V-04,"Match source is the c:z of instance document, only period
       aspect is uncovered, 3rd fact var must seek uncovered period of
       first (c:z) fact variable.",46210-periodUncovered-instance.xml,pass,,
,,V-05,"Match source is the c:z of instance document, only segment
       aspect is uncovered, 3rd fact var must seek uncovered segment of
       first (c:z) fact variable.",46210-segmentUncovered-instance.xml,pass,,
,,V-06,"Match source is the c:z of instance document, only scenario
       aspect is uncovered, 3rd fact var must seek uncovered scenario of
       first (c:z) fact variable.",46210-scenarioUncovered-instance.xml,pass,,
,,V-07,"Match source is the c:z of instance document, only unit
       aspect is uncovered, 3rd fact var must seek uncovered unit of
       first (c:z) fact variable.",46210-unitUncovered-instance.xml,pass,,
,,V-08,"Match source is the c:f of instance document, only concept
       aspect is uncovered, 3rd fact var must seek uncovered concept of
       first (c:f) fact variable (as in V-01).  Here the 3rd fact variable has a unit
       aspect with a covered complemented filter, which in earlier spec
       drafts did not cover, but now is to be covering.",46210-unitCovered-complement-instance.xml,pass,,
,46220 Dimensional ImplicitFilter Processing.xml
,,V-01,"Match source is the first c:f of instance document, only concept
       aspect is uncovered, 3rd fact var must seek uncovered concept of
       first fact variable.",46220-conceptUncovered-instance.xml,pass,,
,,V-02,"Match source is the c:z of instance document, only tuple
       aspect is uncovered, 3rd fact var must seek uncovered tuple aspect of
       first (c:z) fact variable.",46220-tupleUncovered-instance.xml,pass,,
,,V-03,"Match source is the c:z of instance document, only entity
       aspect is uncovered, 3rd fact var must seek uncovered entity of
       first (c:z) fact variable.",46220-entityUncovered-instance.xml,pass,,
,,V-04,"Match source is the c:z of instance document, only period
       aspect is uncovered, 3rd fact var must seek uncovered period of
       first (c:z) fact variable.",46220-periodUncovered-instance.xml,pass,,
,,V-05,"Match source is the c:z of instance document, only segment
       aspect is uncovered, 3rd fact var must seek uncovered segment of
       first (c:z) fact variable.",46220-nonXDTsegmentUncovered-instance.xml,pass,,
,,V-06,"Match source is the c:z of instance document, only scenario
       aspect is uncovered, 3rd fact var must seek uncovered scenario of
       first (c:z) fact variable.",46220-nonXDTscenarioUncovered-instance.xml,pass,,
,,V-07,"Match source is the c:z of instance document, only segment
       aspect is uncovered, 3rd fact var must seek uncovered segment of
       first (c:z) fact variable.",46220-segmentExplDim1Uncovered-instance.xml,pass,,
,,V-08,"Match source is the c:z of instance document, only scenario
       aspect is uncovered, 3rd fact var must seek uncovered scenario of
       first (c:z) fact variable.",46220-scenarioTypedDim1Uncovered-instance.xml,pass,,
,,V-09,"Match source is the c:z of instance document, only unit
       aspect is uncovered, 3rd fact var must seek uncovered unit of
       first (c:z) fact variable.",46220-unitUncovered-instance.xml,pass,,
,,V-10,"(See 31430 test case for further explanation.)
      The example shows aggregation over the product dimension by
      use of the product dimension members tree, and over region
      dimenson by region dimension members tree.  Implicit filtering
      for the non-aggregated dimension is required, otherwise a cross
      product of excessive results will occur.  For each product
      dimension, the child members are aggregated.  
      See powerpoint enclosed for further details.
      This evaluation determines a dimension filter member by the function
      xfi:fact-explicit-dimension-value of the aggregate
      variable.",../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Sales-instance.xml,pass,"{'assertion': (6, 0)}",
,,V-11,"This is different from the other variations.  Three primary items in two
       contexts are output (f, g, and h), but also matched against g and h with
       concept name filtering and coverage.  This should produce the same three
       primary items, but added to the corresponding g and h to show that their
       implicit filtering of the primary items matched them up only to their
       typed-dimensional-matches.  If the implicit filtering goofs up there would
       be 24 results (with values 21003, 22003, 23003, 21004, 22004, 23004,
       21005, 22005, 23005, 21006, 22006, and 23006).",46220-scenarioTypedDim1Uncovered-2-instance.xml,pass,,
,,V-12,"Same as V-11 but fake general filters added to force dependency, to assure
       that evaluation order fv1 then fv2 then fv3 has same result (as V-11 and V-13)",46220-scenarioTypedDim1Uncovered-3-instance.xml,pass,,
,,V-13,"Same as V-11 but fake general filters added to force dependency, to assure
       that evaluation order fv1 after fv2 and fv3 has same result (as V-11 and V-12)",46220-scenarioTypedDim1Uncovered-4-instance.xml,pass,,
,47200 No MatchingFilter Processing.xml
,,V-01,Tests assures strategy that three unfiltered facts to two fact variables produces nine (cross-product) results,47200-noMatching-instance.xml,pass,,
,47201 ConceptMatchingFilter Processing.xml
,,V-01,"Tests strategy is three facts to two fact variables, with second concept-matched to first produces three results",47201-conceptMatching-instance.xml,pass,,
,,V-02,"Tests strategy is three facts to two fact variables, with second concept-matched-complement to first produces six results",47201-conceptMatchingComplement-instance.xml,pass,,
,,V-03,Same as V-01,47201-noVariablePrefix-instance.xml,pass,,
,47202 LocationMatchingFilter Processing.xml
,,V-01,"Tests strategy is two facts in four locations, with each pair concept-matched to first produces four results",47202-locationMatching-instance.xml,pass,,
,47203 UnitMatchingFilter Processing.xml
,,V-01,"Three facts per each different kind of unit, some simple, others ratio-terms, units match of second & third of each set fact variables, producing unique sum",47203-unitMatching-instance.xml,pass,,
,47204 EntityIdentifierMatchingFilter Processing.xml
,,V-01,"Three facts, 4 contexts, each other two share scheme/value,  match of tripple of fact variables to guarantee each of scheme/value and tandem filtering considered.  The two scheme namespace URI's have no escaped or capitalization differences.",47204-entityIdentifierMatching-instance.xml,pass,,
,,V-02,"Same as V-01 but see W3C instructions on comparing namespace URIs (http://www.w3.org/TR/REC-xml-names/#NSNameComparison), examples, used here.  Tests this w3c requirement in comparing namespace URIs: ""the comparison is case-sensitive, and no %-escaping is done or undone"".",47204-entityIdentifierMatching-w3c-instance.xml,pass,,
,47205 PeriodMatchingFilter Processing.xml
,,V-01,"Two instant concepts, two duration concepts; 2 instant, 3 duration periods; tandem matching facts in each",47205-periodMatching-instance.xml,pass,,
,47206 CompleteSegmentMatchingFilter Processing.xml
,,V-01,"Source and target have same complete segment, including both xdt and non-xdt elements, but treated only as sequence of elements",completeSegMatch-instance-v01.xml,pass,,
,,V-01a,"Same as V-01 but a context is introduced that has the dimensional elements in reverse order.  Purpose is to show that the dimension specification is not used for comparing segments, so that the dimensional elements are only compared using s-equality, and their order differences aren't ignored.  If XDT-aware dimension element comparison were used, a second result fact would be produced.",completeSegMatch-instance-v01a.xml,pass,,
,,V-02,Source and target have complex structure of elements included,completeSegMatch-instance-v02.xml,pass,,
,,V-03,"Source and target have element attributes in different order, numerics equal but different syntax. (Deferred by commenting out, text with whitespaces around match (but not xml:space=""preserve"")).",completeSegMatch-instance-v03.xml,pass,,
,,V-04,Source and target have no segment,completeSegMatch-instance-v04.xml,pass,,
,47207 NonXDTSegmentMatchingFilter Processing.xml
,,V-01,"Non-Xdt portion of kanchenjunga has two elements mixed with dimensions, different interleaving than everest source",nonXdtSegMatch-instance-v01.xml,pass,,
,,V-02,"Non-Xdt portion of everest has two elements mixed with dimensions, different order than source, no match results",nonXdtSegMatch-instance-v02.xml,pass,,
,,V-03,"Non-Xdt portion of vinson has complex elements mixed with dimensions, to match everest source",nonXdtSegMatch-instance-v03.xml,pass,,
,,V-04,"Non-Xdt portion of vinson has complex elements differing in detail from source, no match results",nonXdtSegMatch-instance-v04.xml,pass,,
,,V-05,"Non-Xdt portion of quark is empty, matching all other empty nonXdt portioins",nonXdtSegMatch-instance-v05.xml,pass,,
,,V-06,"Source (everest) and match (kanchenjunga) have element attributes in different order, numerics equal but different syntax.  (Deferred, by commenting out, text with whitespaces around match (but not xml:space=""preserve"")).",nonXdtSegMatch-instance-v06.xml,pass,,
,47209 CompleteScenarioMatchingFilter Processing.xml
,,V-01,"Source and target have same complete scenario, including both xdt and non-xdt elements, but treated only as sequence of elements",completeScenMatch-instance-v01.xml,pass,,
,,V-02,Source and target have complex structure of elements included,completeScenMatch-instance-v02.xml,pass,,
,,V-03,"Source and target have element attributes in different order, numerics equal but different syntax.  (Deferred by commenting out, text with whitespaces around match (but not xml:space=""preserve"")).",completeScenMatch-instance-v03.xml,pass,,
,,V-04,Source and target have no scenario,completeScenMatch-instance-v04.xml,pass,,
,47210 NonXDTScenarioMatchingFilter Processing.xml
,,V-01,"Non-Xdt portion of kanchenjunga has two elements mixed with dimensions, different interleaving than everest source",nonXdtScenMatch-instance-v01.xml,pass,,
,,V-02,"Non-Xdt portion of everest has two elements mixed with dimensions, different order than source, no match results",nonXdtScenMatch-instance-v02.xml,pass,,
,,V-03,"Non-Xdt portion of vinson has complex elements mixed with dimensions, to match everest source",nonXdtScenMatch-instance-v03.xml,pass,,
,,V-04,"Non-Xdt portion of vinson has complex elements differing in detail from source, no match results",nonXdtScenMatch-instance-v04.xml,pass,,
,,V-05,"Non-Xdt portion of quark is empty, matching all other empty nonXdt portioins",nonXdtScenMatch-instance-v05.xml,pass,,
,,V-06,"Source (everest) and match (kanchenjunga) have element attributes in different order, numerics equal but different syntax.  (Deferred, by commenting out, text with whitespaces around match (but not xml:space=""preserve"")).",nonXdtScenMatch-instance-v06.xml,pass,,
,47212 DimensionMatchingFilter Processing.xml
,,V-01,"Explicit dimensions are equal, they have same member",dimMatch-instance-v01.xml,pass,,
,,V-02,"Note that attributes are in different ordering.  Decimal and double attributes and text values must be compared using respective typed comparison operators.  Also explicit dimension (not subject of match filter) differs, but shouldn't be considered.",dimMatch-instance-v02.xml,pass,,
,,V-03,"Reuse of variation V-02, but right has typed sub-elements in different order, so result of match filter is false, e.g., no output fact results.",dimMatch-instance-v03.xml,pass,,
,,V-03a,"Reuse of variation V-02, except right has a3 attribute not equal, so result of match filter is false, e.g., no output fact results.",dimMatch-instance-v03a.xml,pass,,
,,V-04,Explicit dimension of V-01 factvar2 is different from that of factvar1,dimMatch-instance-v04.xml,pass,,
,,V-05,Explicit dimension of V-01 factvar1 is missing from factvar2,dimMatch-instance-v05.xml,pass,,
,,V-06,Typed dimension of V-01 factvar1 is missing from factvar2,dimMatch-instance-v06.xml,pass,,
,,V-07,"Explicit dimension of V-05 factvar2 also missing, since both missing, match result is true",dimMatch-instance-v07.xml,pass,,
,,V-08,Typed dimension of V-06 is missing from both factvars so match result is true,dimMatch-instance-v08.xml,pass,,
,47213 MatchingFilter-MatchVariableInappropriateValues Processing.xml
,,V-01,"The matched variable is bound to a fallback value, so the filter matches no facts.",47213-instance-1.xml,fail,,xmlSchema:elementUnexpected
,,V-01a,"The matched variable is a general variable, so the filter matches no facts.",47213-instance-1a.xml,fail,,xmlSchema:elementUnexpected
,,V-01b,"The matched variable is a parameter, so the filter matches no facts.",47213-instance-1b.xml,fail,,xmlSchema:elementUnexpected
,,V-02,"The matched variable is bound to a sequence, but it has consistent a value for the matched aspect, so this value is matched to by the filter.",47213-instance-2.xml,fail,,xmlSchema:elementUnexpected
,,V-03,"The matched variable is bound to a sequence, and it has inconsistent values for the matched aspect, so an error is raised.",47213-instance-3.xml,pass,xbrlmfe:inconsistentMatchedVariableSequence,xbrlmfe:inconsistentMatchedVariableSequence xmlSchema:elementUnexpected
,48210 PeriodFilter Processing Period.xml
,,V-01,"Matched fact's start period must be equal to the end period of the fact that the variable ""v:vo"" has evaluated to.  The variable being matched to ($v:vo) has a concept filter so that it only evaluates to a start-end period.",48210-periodFilter-start-eq-end-instance.xml,pass,,
,,V-02,"This variant does not filter vo's concept, and throws error when trying the filter with $v:vo bound to item eg:c with a forever period. (Added by Herm.)",48210-periodFilter-errTest-1-instance.xml,pass,xfie:PeriodIsForever,xfie:PeriodIsForever
,,V-03,"This variant does not check if v's period is forever, and throws error when trying the filter with $v:v on the item with a forever period, because the period filter test lacks the is-start-end-period test.  (Added by Herm.)",48210-periodFilter-errTest-2-instance.xml,pass,xfie:PeriodIsForever,xfie:PeriodIsForever
,,V-04,"This variation general test protects against forever period error, and tests matching period-start to instants also.  In this case when producing a result for eg:e, an instant period is specified but SAV is a duration period, so an invalid output instance document results from the attempt to produce period-instant (from duration SAV period).  According section 1, Introduction, ""In many cases, these problems will only be detectable through XBRL validation of the XBRL instances produced by formulae"", so the resulting instance document is XBRL invalid.",48210-periodFilter-errTest-3err-instance.xml,pass,invalid,xbrl.4.7.2:contextPeriodType
,,V-05,"This variation general test protects against forever period error, and tests matching period-start to instants also.  The error caused by eg:e in V-04 is avoided by removing eg:e.",48210-periodFilter-errTest-3-instance.xml,pass,,
,48220 PeriodFilter Processing PeriodStart.xml
,,V-01,"The fact must be reported with a finite duration that begins at the start of the day on April 1, 2006.",48220-periodStartFilter-date-instance.xml,pass,,
,,V-02,"The fact must be reported with a finite duration that begins at the start of the day on April 1, 2006.",48220-periodStartFilter-datetime-instance.xml,pass,,
,48230 PeriodFilter Processing PeriodEnd.xml
,,V-01,"The fact must be reported with a finite duration that ends at the end of the day on March 31, 2007.",48230-periodEndFilter-date-instance.xml,pass,,
,,V-02,"The fact must be reported with a finite duration that ends at the start of the day on April 1, 2007.",48230-periodEndFilter-datetime-instance.xml,pass,,
,48240 PeriodFilter Processing PeriodInstant.xml
,,V-01,"The fact must be reported as at the end of the day of April 1, 2006.",48240-periodInstantFilter-date-instance.xml,pass,,
,,V-02,"The fact must be reported as at the start of the day of April 2, 2006.",48240-periodInstantFilter-datetime-instance.xml,pass,,
,48250 PeriodFilter Processing Forever.xml
,,V-01,The fact must be reported with the forever period.,48250-ForeverFilter-instance.xml,pass,,
,48260 PeriodFilter Processing InstantDuration.xml
,,V-01,"The fact must be reported for instant that is equal to the start of the duration of the fact that the variable ""v:vo"" has evaluated to.",48260-InstantDurationFilter-boundary-start-instance.xml,pass,,
,,V-02,"The fact must be reported for instant that is equal to the end of the duration of the fact that the variable ""v:vo"" has evaluated to.",48260-InstantDurationFilter-boundary-end-instance.xml,pass,,
,49210 Relative Dimensional Filter Processing.xml
,,V-01,"For variable $v:flow, a covering concept-name filter requires matching facts to report values for the eg:flow concept.  
For variable $v:stock (starting stock), a covering concept-name filter requires matching facts to report values for the eg:stock concept; and a
covering instant-duration filter requires matching facts to report values with an instant equal to the start of the duration of the fact matched by the eg:flow variable, and a
covering typed dimension filter requires matching facts to report values with a restatement date that is equal to the end date of the fact matched by the eg:flow variable, and the final
covering relative filter matches otherwise uncovered aspects to the fact that variable eg:flow has evaluated to.  
(Note that the test expression for the date check has to honor a date union, for instant date, so if reported without time, it has to be converted into dateTime on the next midnight, as shown.  For timeless dates, the +dateTime(1 day) is needed because dateTime(date, xs:time(24:00:00)) does not work.)",49210-restatementFilter-instance.xml,pass,,
,,V-02,Same as V-01 but restatement date here is reported with time,49210-restatementFilter-with-time-instance.xml,pass,,
,,V-03,"Variable being matched to (v1) has 3 dimensions, but fact being tested (for v2) 
      has only two dimensions, v2's absent 3rd dimension does not have a default.  
      The relative filter is only concerned with those aspects
      uncovered of variable being matched (v2's two dimensions) and does not worry
      about the third dimension (on v1 being matched to) which is not present on
      v2. 
      (Variation supports e-mail by Okumura-san.)",49210-noDefDim-instance.xml,pass,,
,,V-04,"As V-03 but variable being matched to (v1) has 3 dimensions; fact being tested (for v2) 
      has only two dimensions, v2's absent 3rd dimension has a default.  
      The relative filter processes the dimension-implied dimensions for v2, thus
      accounting for the default value of the absent 3rd dimension.",49210-withDefDim-instance.xml,pass,,
,49220 Relative NonDimensional Filter Processing.xml
,,V-01,"For variable $v:assets, a covering concept-name filter requires matching facts to report values for the eg:assets concept. 
For variable $v:liabilities, a covering concept-name filter requires matching facts to report values for the eg:liabilities concept, and a covering relative filter matches otherwise-uncovered aspects to the fact that variable $v:assets has evaluated to.",49220-equity-instance.xml,pass,,
,,V-03,Same as V-01.,49220-noPrefixVariableName-instance.xml,pass,,
,50210 SegmentScenarioFilter Processing Segment.xml
,,V-01,"The fact's context must contain the segment. In addition, this segment content is not based upon the explicit or typed dimensions defined in the XBRL Dimensions Specification.",50210-segmentFilter-exist-instance.xml,pass,,
,,V-02,"The fact's context must contain the segment that has the child element ""eg:m"". In addition, this segment content is not based upon the explicit or typed dimensions defined in the XBRL Dimensions Specification.",50210-segmentFilter-child-instance.xml,pass,,
,,V-03,Same as V-02 as noted in name field.,50210-segmentFilter-dim-model-instance.xml,pass,xbrlve:filterAspectModelMismatch,xbrlve:filterAspectModelMismatch
,50220 SegmentScenarioFilter Processing Scenario.xml
,,V-01,"The fact's context must contain the scenario. In addition, this scenario content is not based upon the explicit or typed dimensions defined in the XBRL Dimensions Specification.",50220-scenarioFilter-exist-instance.xml,pass,,
,,V-02,"The fact's context must contain the scenario that has the child element ""eg:m"". In addition, this scenario content is not based upon the explicit or typed dimensions defined in the XBRL Dimensions Specification.",50220-scenarioFilter-child-instance.xml,pass,,
,51210 Tuple Parent Processing.xml
,,V-01,Facts must not be contained by a tuple. Parent QName xbrli:xbrl.,51210-parentAtRoot-instance.xml,pass,,
,,V-02,Facts must be contained by a specified tuple.,51210-parentInTuple-instance.xml,pass,,
,51220 Tuple Ancestor Processing.xml
,,V-01,Facts must at root or contained by a tuple. Parent QName xbrli:xbrl.,51220-factBelowRoot-instance.xml,pass,,
,,V-02,"Facts must be contained within a specified tuple, at any depth.",51220-parentWithinTuple-instance.xml,pass,,
,51230 Tuple Sibling Processing.xml
,,V-01,"The fact must be a sibling of the fact that variable <v:a> has evaluated to.  Test case produces two results for two tuples, if filter were not sibling filtering, there would be four results.",51230-siblingInSameTuple-instance.xml,pass,,
,51240 Tuple Location Processing.xml
,,V-01,"The fact that variable $v:b has evaluated to must be a child of the element that is the parent of the fact being filtered. E.g., $v:b represents a sibling of the fact being filtered.  Qname of variable whose fact is to be a sibling is v:b, location is ""../*"".  If filter were absent four facts would be produced instead of two (including cross combinations of facts between tuples).",51240-locationInSameParent-instance.xml,pass,,
,,V-02,"The fact that variable $v:b has evaluated to must be a child of an <eg:u> tuple element that is a sibling of the fact being filtered. 
E.g., variable being filtered is to have variable $v:b's fact as a nephew of sibling <eg:u>.  The fact being filtered is the uncle of variable $v:b's fact.
If filter were absent four facts would be produced instead of two (including cross combinations of facts between tuples).",51240-locationIsNephew-instance.xml,pass,,
,,V-03,"The fact variable $tuple evaluates one by one to tuples in the instance document.  The fact variables $b and $c bind to its children by a location filter.  Tests that tuple iteration works.
If filter were absent four facts would be produced instead of two (including cross combinations of facts between tuples). Implicit filtering is disabled so that there is no attempt to match absent tuple aspects to the items (entity, period, etc).",51240-locationByParent-instance.xml,pass,,
,,V-05,"Same as V-01 except for no-namespace no-prefix variable name, and use of default xmlns on elements.",51240-noPrefixVariableName-instance.xml,pass,,
,52210 Unit Single Measure Processing.xml
,,V-01,The units of measurement must be reported with a single measure QName that is equal to eg:squareMiles. Non-numeric facts and facts reported with units of measurement represented by several measures are all rejected by this filter.,52210-stats-squareMiles-instance.xml,pass,,
,,V-02,The units of measurement must be reported with a single measure defined by an expression using a parameter to identify the desired measure's localname. Non-numeric facts and facts reported with units of measurement represented by several measures are all rejected by this filter.,52210-stats-byParameter-instance.xml,pass,,
,,V-03,Complement single measure filter accepts non-numeric facts and those that have different single measure then required.,52210-complement-unit-instance.xml,pass,"{'assertion': (2, 2)}","xmlSchema:elementUnexpected {'assertion': (2, 2)}"
,52220 Unit General Measures Processing.xml
,,V-01,"The filter rejects facts if they are not reported with a unit of measure that involves both a numerator and a denominator.  <uf:generalMeasures test=""exists(xbrli:divide)""/>.  E.g., accepts speed or acceleration units in this example.",52220-hasDivideMeasures-instance.xml,pass,,
,,V-02,"The filter rejects facts if they are not reported with one divide unit of measure.  <uf:generalMeasures test=""count(xbrli:divide/xbrli:unitDenominator/xbrli:measure) eq 1""/>.  E.g., accepts speed but rejects acceleration units in this example.",52220-oneDivideMeasure-instance.xml,pass,,
,,V-03,"The filter rejects facts if they are not reported with a unit of measure that is expressed as a numerator measure with a QName, eg:kilometers and a denominator measure with a QName, eg:hours.  (This formula has been revised because the ""and"" operations of the general measure filter are allowed to be executed in any order and as a result a processor may have raised XPTY0004 if executing the eq with more than one arguments.)",52220-specificDivideMeasure-instance.xml,pass,,
,53210 ValueFilter Processing Nil.xml
,,V-01,The fact must be reported as nil.,53210-nilFilter-instance.xml,pass,,
,53230 ValueFilter Processing Precision.xml
,,V-01,The fact must be numeric and its inferred precision must be greater than or equal to one.,53230-precisionFilter-ge1-instance.xml,pass,,
,,V-02,The fact must be numeric and its inferred precision must be greater than or equal to four.,53230-precisionFilter-ge4-instance.xml,pass,,
,60100 GenericMessages Processing.xml
,,V-01,"The expressions in the message show variable node-name, value, contextRef and period dates.",gml-test1-instance.xml,pass,"{'test-assertion': (1, 1)}","{'test-assertion': (1, 1)}"
,,V-02,The uncovered-aspect function is used to obtain the concept and period aspects.,gml-test2-instance.xml,pass,"{'test-assertion': (0, 1)}","{'test-assertion': (0, 1)}"
,,V-02a,The uncovered-aspect function raises an error due to implicit filtering being false.,gml-test2a-instance.xml,pass,xffe:invalidFunctionUse,"xffe:invalidFunctionUse {'test-assertion': (0, 1)}"
,,V-03,"An XPath variable name does not exist, which raises an XPath 2 static compilation error.",gml-test3-instance.xml,pass,xqt-err:XPST0008,err:XPST0008
,,V-04,An XPath syntax error raises an XPath 2 static compilation error.,gml-test4-instance.xml,pass,xqt-err:XPST0003,err:XPST0003
,,V-05,Missing right curly bracket error.,gml-test5-instance.xml,pass,xbrlmsge:missingRightCurlyBracketInMessage,xbrlmsge:missingRightCurlyBracketInMessage
,,V-06,Missing left curly bracket error.,gml-test6-instance.xml,pass,xbrlmsge:missingLeftCurlyBracketInMessage,xbrlmsge:missingLeftCurlyBracketInMessage
,,V-08,Existence assertion contains invalid reference to variable set variable.,gml-test8-instance.xml,pass,xqt-err:XPST0008,err:XPST0008
,,V-09,Existence assertion using in scope variables,gml-test9-instance.xml,pass,"{'test-assertion': (0, 1)}","err:FOTY0012 {'test-assertion': (0, 1)}"
,60200 CustomXPathFunction Processing.xml
,,V-01,Usage pattern of simple local XPath-defined function.,abc-instance1.xml,pass,,
,,V-01a,Usage pattern of simple local XPath-defined function.,abc-instance1a.xml,pass,,
,,V-02,Usage pattern of simple local XPath-defined function.,abc-instance2.xml,pass,,
,,V-03,Usage pattern of simple local XPath-defined function.,abc-instance3.xml,pass,,
,,V-04,Usage pattern of function with recursion,power-instance1.xml,pass,,
,,V-05,"Usage pattern of function P = the present value of amount A, due n years from now, at r = the rate of interest.
For example, someone contracts to pay you $100,000 in ten years. What's that worth right now, if they changed their mind and decided to paid you upfront? 
At interest compounded annually:
P = A/(1 + r)**n  This requires the power function from V-04.",present-value-instance1.xml,pass,,
,,V-06,Usage pattern of simple local XPath-defined function.,trim-instance1.xml,pass,,
,,V-07,Usage pattern of simple local XPath-defined function.,isNumeric-instance1.xml,pass,,
,,V-08,Usage pattern of simple local XPath-defined function.  Compute the sum of the values of the facts in an input sequence checking that all facts are aspect-matched except for a specified explicit dimension and checking that there is exactly one fact in the sequence for each domain member of the explicit dimension with a specified relationship from the explicit dimension domain member with the specified QName. Throws an exception if the explicit dimension does not have the specified domain member. Make sure that the implementation does not throw exceptions if the data types of any of the input facts are numeric but not xs:decimal.,sum-instance1.xml,pass,,
,,V-09,See V-08,sum-instance2.xml,pass,eg:aspect-issues,aspect-issues
,,V-10,"See V-08.
The variable values in each step are as follows:

  $mismatchedUnitAspects         empty
  $mismatchedConceptAspects      empty
  $mismatchedIdentifierAspects   empty
  $mismatchedPeriodAspects       empty
  $membersExpected               (test:memC1, test:memC2, test:memC3) 
  $membersReported               (test:memC1, test:memC2, test:memWild) 
  $missingDimensionMembers       ""missing member: test:memC3""
  $unexpectedDimensionMembers    ""unexpected member: test:memWild""
  $duplicatedReportedMembers     empty
  $aspect-issues                 (""missing member: test:memC3"", ""unexpected member: test:memWild"")",sum-instance3.xml,pass,eg:aspect-issues,aspect-issues
,,V-11,See V-08,sum-instance4.xml,pass,eg:aspect-issues,aspect-issues
,,V-12,"Usage pattern of function with indirect recursion.  
      Function argument type is xs:integer (not schema-element(xbrli:item)).
    fa(int n): if (n gt 0) then 2 * fb(n-1) else 1.
    fb(int n): if (n gt 0) then 5 + fa(n-1) else 2.",indirect-recursion-instance1.xml,pass,,
,,V-21,Usage pattern of simple local XPath-defined function with an implementation input missing.,abc-instance21.xml,pass,xbrlcfie:inputMismatch,xbrlcfie:inputMismatch
,,V-22,Usage pattern of simple local XPath-defined function with an signature input missing.,abc-instance22.xml,pass,xbrlcfie:inputMismatch,xbrlcfie:inputMismatch
,,V-23,Usage pattern of simple local XPath-defined function with two signatures for one implementation.,abc-instance23.xml,pass,xbrlcfie:tooManyCFIRelationships,xbrlcfie:tooManyCFIRelationships
,,V-24,Usage pattern of simple local XPath-defined function with one signature with two implementations.,abc-instance24.xml,pass,xbrlcfie:tooManyCFIRelationships,xbrlcfie:tooManyCFIRelationships
,,V-25,Usage pattern of simple local XPath-defined function with one implementation with no related signature.,abc-instance25.xml,pass,xbrlcfie:missingCFIRelationship,xbrlcfie:missingCFIRelationship
,,V-26,Tests that a custom function definition that is used without an implementation raises an XPath error.,abc-instance26.xml,pass,err:XPST0017,err:XPST0017
,61000 AspectCoverFilter Processing.xml
,,V-01,"String is unitless, numeric has unit, must cover unit for binding together.",string-numeric-unit-cover-instance.xml,pass,,
,,V-02,Error code must be thrown for inconsistent cover attributes for same aspect.,string-numeric-unit-cover-conflict-instance.xml,pass,xbrlacfe:inconsistentAspectCoverFilters,xbrlacfe:inconsistentAspectCoverFilters
,,V-03,It is ok to have duplicate acf filtering for same aspect with same cover attributes.,string-numeric-unit-cover-dup-ok-instance.xml,pass,,
,,V-04,Must cover concept for sequence to have two items together.,concept-cover-instance.xml,pass,,
,,V-05,Must cover Entity-identifier for sequence to have two items together.,entity-identifier-cover-instance.xml,pass,,
,,V-06,Must cover period for sequence to have two items together.,period-cover-instance.xml,pass,,
,,V-07,Must cover segment for sequence to have two items together.,complete-segment-cover-instance.xml,pass,,
,,V-08,Must cover scenario for sequence to have two items together.,complete-scenario-cover-instance.xml,pass,,
,,V-09,"Must cover location for sequence to have three ""concept:n1"" fact items from different (tuple) locations together.",location-cover-instance.xml,pass,,
,,V-10,Must cover all aspects for sequence to have all ten fact items together in one sequence binding.,all-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-11,Must cover multiple enumerated aspects for sequence to have all ten fact items together in one sequence binding.,multiple-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-12,Must cover nonXDT segment for sequence to have two items together.,nonXDT-segment-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-13,Must cover nonXDT scenario for sequence to have two items together.,nonXDT-scenario-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-14,Must cover dimensions of the segment for sequence to have nine items together.,dimensions-segment-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-15,Same as V-13 but dimensions are in scenarios,dimensions-scenario-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-16,Must cover typed qnamed dimension of the segment for sequence to have two items together.,typed-qnamed-dimension-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-16a,Must cover typed qnameExpression dimension of the segment for sequence to have two items together.,typed-qnameExpr-dimension-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-17,Must cover explicit dimension of the segment for sequence to have two items together.,explicit-dimension-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-17a,Must cover explicit dimension (by covering all excluding typed) of the segment for sequence to have two items together.,exclude-dimension-cover-instance1.xml,pass,"{'assertion': (1, 0)}","{'assertion': (1, 0)}"
,,V-20,The complement attribute is ignored for aspect cover filters as it has no impact on the covering behaviour,complement-true-cover-instance.xml,pass,,
,61100 ConceptRelationsFilter Processing.xml
,,V-01,Concept relation filter provides child facts by variable reference for specifying source concept.,nav-test-child-instance.xml,pass,,
,,V-07,"Concept-relation filter provides root facts by sibling relationship to the xfi:root source object, specified by qname.",nav-test-roots-instance.xml,pass,,
,,V-07a,"Extends v-07 to provide roots in all link roles, testing linkroleExpression (and arcroleExpression).",nav-test-roots-all-link-roles-instance.xml,pass,,
,,V-09,"Per discussions with Victor Morilla, this case tests the mechanism where relationships of the pattern
       A = B + C would be tested with an assertion, with either A or B or C optional (fall back value).  The
       formula adds parent + children, and tests that an abstract in either the to or from of a relationship
       is not used to initiate a calculation, but that an initiated calculation can have either to or from
       falling back.  In this instance A and A1131 are missing, and fall back values reflect their contribution
       to the result.",nav-test2-instance.xml,pass,,
,,V-20,"Calculation relations with their PSVI-typed weight attribute are used to filter summation-item 
       relations to produce separate child sequences, posChildValues and negChildValues, 
       each respectively a sequence of those children, the first sequence with weights +1 
       and the second with weights -1 (e.g., for an SEC like case where weights can only have unitary value).  
       Precondition blocks firing if no children (e.g., parent is a tree leaf).  
       The value assertion is exact (no rounding considering decimals attribute).
       These should be the 6 (satisfied) assertions:
        A = A1 + A2 + A3,
        A1 = A11 + A12 + A13,
        A11 = A111 - A113 (A112 has weight 11, ignored),
        A12 = A121 + A122,
        A2 = A21, and
        A21 = A211.",calc-lb-exact-sum-pos-neg-children-instance-ok.xml,pass,"{'calc-linkbase-assertion': (6, 0)}","{'calc-linkbase-assertion': (6, 0)}"
,,V-20a,"Same as V-20, but one inconsistent fact item is introduced, causing two calculation assertions to be unsuccessful.  There are two inconsistencies because the inconsistent fact is both a sum (having children) and contributor to its parent.",calc-lb-exact-sum-pos-neg-children-instance-err1.xml,pass,"{'calc-linkbase-assertion': (4, 2)}","{'calc-linkbase-assertion': (4, 2)}"
,,V-21,"Calculation relations with the effective arc element's PSVI-typed weight attribute are used to filter parent and family members (all fact values matching parent in aspects such as period, etc) to produce a generalVariable, weightedChildValues, which is a sequence of those family members whose QNames are 1-level calc linkbase descendants, mulitplied by the PSVI-typed weight attribute.  The concept-relation-filter can't be used here, because the relationship (arc) node is needed to access the weight attribute, so the xfi functions are used instead.  Precondition blocks firing if no children (e.g., parent is a tree leaf).  The value assertion is exact (no rounding considering decimals attribute).",calc-lb-exact-sum-weighted-children-instance-ok.xml,pass,"{'calc-linkbase-assertion': (6, 0)}","{'calc-linkbase-assertion': (6, 0)}"
,,V-21a,"Same as V-21, but one inconsistent fact item is introduced, causing two calculation assertions to be unsuccessful.  There are two inconsistencies because the inconsistent fact is both a sum (having children) and contributor to its parent.",calc-lb-exact-sum-weighted-children-instance-err1.xml,pass,"{'calc-linkbase-assertion': (4, 2)}","{'calc-linkbase-assertion': (4, 2)}"
,,V-21b,"Same as v-21, but $parent is filtered to only bind on parent concepts of arcs in the currently evaluating
       $linkRole.  More efficient in processing time, but adds another generalVariable and step.  Demonstrates
       the concept-relationships function from root with all descendant relationships, and use of relationship-from-concept
       function to obtain QName of parent of relationship's effective arc.",calc-lb-exact-sum-weighted-children-instance2-ok.xml,pass,"{'calc-linkbase-assertion': (6, 0)}","{'calc-linkbase-assertion': (6, 0)}"
,,V-41,"Per suggestion by V. Morella, formula uses Concept Relations Filter to determine which facts of an
      instance do not meet the minimum precision expressed as decimals, per requirement by a regulator.
      For example, a number must be reported as decimals accurate to thousands (decimals -3) but was reported
      accurate to hundreds of thousands (-5).
      In order to use Concept Relations Filter, first fact variable binds to an item, and second fact variable
      also binds to same item (so that the item can be tested by a variable reference).
      Requires that the test expression of the filter allow a variable reference (that of the item being filtered).
      Both fact variables bind when precision is inadequate.  Assertion test specifies false, so that failure
      message is produced when both fact variables bind.",min-reported-precision-with-filter-instance.xml,pass,"{'min-required-precision-assertion': (0, 3)}","{'min-required-precision-assertion': (0, 3)}"
,,V-42,"Per suggestion by V. Morella, formula uses Concept Relationships Function to determine which facts of an
      instance do not meet the minimum precision expressed as decimals, per requirement by a regulator.
      For example, a number must be reported as decimals accurate to thousands (decimals -3) but was reported
      accurate to hundreds of thousands (-5).
      First fact variable binds to an item, second general variable returns minimum precision attribute of
      relationship arc from item's concept to root parent.
      Assertion is true when precision is adequate, false otherwise.",min-reported-precision-with-function-instance.xml,pass,"{'min-required-precision-assertion': (3, 3)}","{'min-required-precision-assertion': (3, 3)}"
